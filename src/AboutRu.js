import React from 'react';
import PressableLink from './PressableLink';
import DownloadLinks from './DownloadLinks';

export default function About(props){
    return (
        <>
            {props.inApp && <br/>}
            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B] Назад к списку</PressableLink>
            <br/>
            {!props.inApp &&
            <div class="downloadBox">
                <h1>Скачать xOPS Бенчмарк</h1>
                <br/>
                <DownloadLinks />    
            </div>}

            {!props.download &&
            <> 
            <h1>Как получены результаты</h1>
            <br/>
            <div className="text">
                <p>
                Для получения результатов используется приложение <em>xOPS</em>. 
                {!props.inApp && <> Ссылки для скачивания выше.</>}
                </p>
                <p>
                Выполняется по крайней мере 3 теста, приводяться усредненные значения. Опции по умолчанию (для целочисленных и дробных вычислений):
                точность 32 бита, количество потоков определяеться как двойное количество ядер процессора(8 ядер - 16 потоков). 
                Для избежания влияния на результаты закрываются активные приложения, проверяется, что сетевая активность минимальна (нету запущенных загрузок и обновлений).
                </p>
            </div>
            <br/>
            </>}
            
            <h1>Как работает приложение</h1>
            <br/>
            <div className="text">
                <p>
                Приложение измеряет сколько операций (сложение, вычитание, умножение, деление, сравнение и т.п.) может выполнить центральный процессор (ЦП) над дробными (floating-point) и целыми (integer) числами:
                </p>    
                <p>
                    <ol>
                        <li>FLOPS (Floating-point Operations Per Second) - количество операций с дробными числами в секунду, измерение производительности математического сопроцессора (Floating Point Unit, FPU).</li>
                        <li>INOPS (Integer Operations Per Second) - количество операций с целыми числами в секунду, измерение производительности арифметико-логического устройства (Arithmetic logic unit, ALU).</li>
                    </ol>
                </p>
                <p>
                Например 1 G(iga)FLOPS означает, что процессор способен произвести 1 миллиард операций с дробными числами (такими как 1.1+2.2=3.3).
                </p>
                <p>
                Основная логика приложений зачастую построена на целочисленных вычислениях. Графические задачи и игры полагаются на дробные вычисления.   
                </p>
                <p>
                И АЛУ и математический сопроцессор тестируются как в однопоточном, так и многопоточном режиме, что отражает производительность как отдельного ядра, так и всех ядер, задействованных одновременно.
                </p>
                <p>
                Тесты "изолированные", что означает что они нагружают исключительно центральный процессор игнорируя иные компоненты вычислительной системы (память, кэш, хранилище, сеть, оптимизации ПО). Существует множество факторов, определяющих производительность, хоть процессор один из важнейших, он не является единственным. Приложение не пытается дать простой ответ на сложный вопрос "Насколько быстр мой телефон/ноутбук/компьютер?". Однако оно дает оценку одного важного компонента вашего устройства - процессора.
                </p>
                <p>
                xOPS не реализует бенчмарк LINPACK (который обычно подразумевается, когда упоминается FLOPS). Тем не менее результаты в первом приближении можно сравнивать с LINPACK (особенно при сравнении с суперкомпьютерами). Например на ноутбуке с Intel Core i7 8-го поколения оригинальная программа LINPACK (скомпилированная в GCC) дает 5,8 GFLOPS (один поток), xOPS - 4,5 GFLOPS.
                </p>
                <p>
                В то же время LINPACK, реализующий сложный алгоритм, имеет широкое поле для оптимизации. Например пакет Intel LINPACK показывает порядка~ 30 GFLOPS на том же железе.  Т.о. результаты LINPACK представляют сложность с точки зрения сопоставимости: из-за сложностей с минимизацией таких факторов, как оптимизации компилятора, среды выполнения и т.д.
                </p>
                <p>
                xOPS является кроссплатформенной программой и ставит целью обеспечение согласованности результатов при работе на многих устройствах и ОС. Это достигается за счет:
                <ol>
                    <li>
                    Тривиальности операций.<br/>
                    В приложении реализован простой цикл без ветвей, внешних вызовов, сложных структур данных и т.п. Существует несколько последовательных скалярных операций (таких как сложение, умножение), которые повторяются миллионы раз.
                    </li>
                    <li>
                    Подсчета CIL инструкций.<br/>
                    Архитектуры Arm и x86 очень разные, одна и та же операция может быть представлена ​​различным количеством инструкций. Разные компиляторы также могут проивзодить различный машинный код для идентичного исходного кода (даже для одной и той же архитектуры). xOPS основан на .NET и компилируется в промежуточный байт-код - CIL (Common Intermediate Language). Он в свою очередь в дальнейшем преобразуется в машинный код. За единицу измерения операции xOPS принимает одну CIL интсрукцию. Т.о. приложение измеряет количество CIL инструкций, которые способен выполнить процессор в единицу времени и абстрагируется от специфичный машинных инструкций.
                    </li>
                    <li>
                    Отключения оптимизаций.<br/> 
                    Компиляторы сконфигурированы т.о., чтобы оптимизации не применялись к главному циклу. Также код внутри цикла написан максимально очевидным способом: одна строчка - одна операция над операндом. Это сделано для того, что байткод превращался в машинный код наиболее очевидным способом "влоб".
                    </li>
                    <li>
                    Экспериментирования, поиска оптимального сочетания операций, сравнения результатов с дргуими бенчмарками.<br/>
                    Платформа .NET предполагает наличие JIT (Just-in-Time) или AOT (Ahead-of-Time) компилятора и промежуточной среды выполнения (Runtime). Существуют разные версии .NET (Mono для Mac и Android, .NET Framework для Windows), различные версии JIT. Комбинации этих факторов представляют значительный источник вариации результатов (разный машинный код, параллелизм на уровне инструкций, предсказания ветвлений и т. д.). Чтобы убедиться, что результаты являются значимыми и сопоставимыми, при поиске оптимального микса и настроек кода постоянно происходило сравнение результатов на разных устройствах и ОС.
                    </li>
                    <li>
                    Быстроты.<br/>
                    Тесты выполняются за считанные секунды, в сравнении с минутами, которые требуются другим бенчмаркам.
                    </li>
                </ol>
                </p>
                <p>
                С учетом вышеуказанных мер приложение, запущенное на том же MacBook (в Windows Bootcamp, macOS и Android Emulator), показывает разброс результатов в 5%. Также результаты xOPS на 95% коррелируют с показателями другого популярного кросс-платформенного бенчмарка (по результатам измерения 15 устройств).
                </p>
                <p>
                Исходный код: <a href="https://github.com/maxim-saplin/xOPS-App">https://github.com/maxim-saplin/xOPS-App</a>
                </p>
            </div>
        </>
    )
}