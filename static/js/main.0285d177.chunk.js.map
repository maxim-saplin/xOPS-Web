{"version":3,"sources":["img/windows.svg","img/macos.svg","img/google-play.svg","img/apk.svg","img/github.svg","img/linux.svg","data/dictionaries.js","translations/ru.js","translations/fr.js","translations/zh.js","translations/index.js","translations/en.js","PressableLink.js","ListSelector.js","data/results.js","data/index.js","data/db.js","Search.js","TestResultDetailsItem.js","TestResultDetails.js","TestResult.js","Hint.js","TestResults.js","DownloadLinks.js","AboutEn.js","AboutRu.js","AboutFr.js","AboutZh.js","App.js","index.js"],"names":["module","exports","platforms","tests","translations","pageTitle","aboutTitle","downloadTitle","title","subTitle","ST_FLT","MT_FLT","ST_INT","MT_INT","ST_FLT_s","MT_FLT_s","ST_INT_s","MT_INT_s","ST_FLT_f","MT_FLT_f","ST_INT_f","MT_INT_f","performance","nothingToShow","Android","macOS","Windows","all","gflops","ginops","hitEnter","hintDoubleTap","hintSwipe","close","yourDevice","result_FSM","result_ISM","result_FS","result_FM","result_IS","result_IM","localeObj","param","URLSearchParams","window","location","search","get","lang","this","enLocale","locale","toLocaleLowerCase","navigator","language","toLowerCase","includes","ruLocale","ru","frLocale","fr","zhLocale","zh","Object","keys","forEach","key","shortcutRegex","PressableLink","props","onKeyPress","bind","initShortcut","shortcut","children","match","length","keyPressSubscribed","document","addEventListener","removeEventListener","e","activeElement","HTMLBodyElement","onClick","className","Component","ListSelector","toggle","selectAll","selectedKey","filter","k","push","items","map","p","shortcuts","has","val","Array","isArray","i","itemClick","prevItems","Map","sc","arr","set","size","initShortcuts","updateShortcuts","name","l18n","addShortcut","obj","dictionaries","getTests","mod","data","getPlatforms","console","log","results","addYourDeviceResult","yd","device","id","yourDeviceId","deviceDetail","pop","getResults","platfroms","test","excludeIds","filters","r","hidden","platform","trim","result","condition","sort","a","b","lastResultId","getResultById","idExists","setPercents","maxVal","percent","getLastResultId","db","init","fetchVersion","Promise","resolve","fetch","cache","then","response","json","storage","setItem","v","version","fetchDb","JSON","stringify","promise","localStorage","getItem","parse","localDbVersion","initFake","Search","textChanged","moveCursorToEnd","state","extraSpaces","value","blink","showHitn","textInput","React","createRef","enterPressed","target","innerText","searchChanged","setState","charCode","last","el","createRange","setTimeout","selection","getSelection","range","setStart","childNodes","collapse","removeAllRanges","addRange","current","contentEditable","ref","onInput","onFocus","nativeEvent","onBlur","focus","PureComponent","TestResultDetailsItem","selectedTest","testName","unit","TestResultDetails","item","noHighlight","TestResult","itemProp","deviceYear","style","width","closableX","selectedIdRemoved","closableEsc","Hint","TestResults","onKeyUp","handleSingleDblClicks","expandedId","doubleTapHint","clickTimeout","text","singleClick","dblClick","preventDefault","clearTimeout","keyCode","deletableId","selectedPlatforms","selectedResultIds","selectedCount","selectedResults","concat","setTitle","keyboardEventsSubscription","itemScope","getAllResults","empty","resultSelected","DownloadLinks","href","src","windows","google_play","apk","github","opacity","linux","About","inApp","linkClass","toggleAbout","class","download","App","platformClick","testClick","swipe","wpf","android","macos","urlParams","selectedIdsParam","aboutParam","showDownloadParam","qParam","inappParam","getSelectedIdsFromParam","inAppPlatform","q","inAppAdjustments","showAbout","showDownload","decodeURIComponent","renderCounter","ids","split","parseInt","Number","isInteger","delete","history","replaceState","toString","swipeHint","left","t","resultId","clearDevice","setSelectedIds","addSelectedIdsToParam","stl","helpLinkClass","onSwipedLeft","onSwipedRight","threshold","themeParam","initParams","body","ReactDOM","render","getElementById","start"],"mappings":"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","file":"static/js/main.0285d177.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/windows.15e72531.svg\";","module.exports = __webpack_public_path__ + \"static/media/macos.3a236d88.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-play.7041ae46.svg\";","module.exports = __webpack_public_path__ + \"static/media/apk.a00fa3a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.990c2b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/linux.51ffa359.svg\";","import l18n from '../translations';\r\n\r\nlet platforms, tests;\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nfunction addShortcut(obj) {\r\n  let match = obj.name.match(shortcutRegex);\r\n  if (match && match.length === 1)\r\n    obj.shortcut = match[0].toLowerCase();\r\n}\r\n\r\nfunction getEntities(items) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i] ? l18n[i] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nfunction getEntitiesWithL18nMod(items, mod) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i+mod] ? l18n[i+mod] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nconst dictionaries = \r\n{\r\n  getTests : function(){\r\n    if (!tests) tests = getEntitiesWithL18nMod(this.data.tests,\"_s\");\r\n    return tests;\r\n  },  \r\n\r\n  getPlatforms : function(){\r\n      if (!platforms){\r\n        platforms = getEntities(this.data.platforms);\r\n\r\n        let keys = platforms.map(p => p.key);\r\n\r\n        if (keys.length !== 4) console.log(\"Invalid number of platforms in DB, 3 supported, found \"+keys.length);\r\n        if (!keys.includes(this.Windows)) console.log(\"Windows platfrom not found in DB\");\r\n        if (!keys.includes(this.Android)) console.log(\"Android platfrom not found in DB\");\r\n        if (!keys.includes(this.macOS)) console.log(\"macOS platfrom not found in DB\");\r\n      }\r\n      return platforms;\r\n  }\r\n}\r\n\r\ndictionaries.ST_FLT = \"ST_FLT\";\r\ndictionaries.MT_FLT = \"MT_FLT\";\r\ndictionaries.ST_INT = \"ST_INT\";\r\ndictionaries.MT_INT = \"MT_INT\";\r\n\r\ndictionaries.Windows = \"Windows\";\r\ndictionaries.Android = \"Android\";\r\ndictionaries.macOS = \"macOS\";\r\n\r\nexport default dictionaries;","const translations = \r\n{\r\n}\r\n\r\nexport default translations;","const translations = \r\n{\r\n}\r\n\r\nexport default translations;","const translations = \r\n{\r\n    pageTitle: \"xOPS CPU Benchmark: Performance Database\",\r\n    aboutTitle:  \"xOPS CPU Benchmark: About App\",\r\n    downloadTitle:  \"xOPS CPU Benchmark: Download\",\r\n    title: \"xOPS CPU Benchmark\",\r\n    subTitle: \"Performance Chart\",\r\n    ST_FLT: \"[F]loating single-threaded\",\r\n    MT_FLT: \"[F]loating multi-threaded\",\r\n    ST_INT: \"[I]nteger single-threaded\",\r\n    MT_INT: \"[I]nteger multi-threaded\",\r\n\r\n    ST_FLT_s: \"[F]lt. ST\",\r\n    MT_FLT_s: \"[F]lt. MT\",\r\n    ST_INT_s: \"[I]nt. ST\",\r\n    MT_INT_s: \"[I]nt. MT\",\r\n\r\n    ST_FLT_f: \"Floating single-threaded\",\r\n    MT_FLT_f: \"Floating multi-threaded\",\r\n    ST_INT_f: \"Integer single-threaded\",\r\n    MT_INT_f: \"Integer multi-threaded\",\r\n\r\n    performance: \"Performance\",\r\n    nothingToShow: \"Nothing to show\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    Windows: \"[W]indows\",\r\n    all: \"All\",\r\n    gflops: \"GFLOPS\",\r\n    ginops: \"GINOPS\",\r\n\r\n    hitEnter: \"Hit Enter & fix top result\",\r\n    hintDoubleTap: \"Double tap to fix record at the top\",\r\n    hintSwipe: \"Swipe left or right to change test\",\r\n    close: \"[C]lose\",\r\n    yourDevice: \"Your device\",\r\n\r\n    result_FSM: \"Flt.S÷M\",\r\n    result_ISM: \"Int.S÷M\",\r\n\r\n    result_FS: \"Flt.S\",\r\n    result_FM: \"Flt.M\",\r\n    result_IS: \"Int.S\",\r\n    result_IM: \"Int.M\"\r\n}\r\n\r\nexport default translations;","import en from './en';\r\nimport ru from './ru';\r\nimport fr from './fr';\r\nimport zh from './zh';\r\n\r\nconst langParam = \"lang\";\r\n\r\n//Default texts\r\nconst translations = en;\r\n\r\n//Must be executed before accesing the translations. Updates default texts with locale specific translations. If there's no translation, default text will be used\r\ntranslations.init = function() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const param = urlParams.get(langParam);\r\n\r\n    let lang = this.enLocale;\r\n    this.locale = lang;\r\n\r\n    if (param) {\r\n        lang = param.toLocaleLowerCase();\r\n    }\r\n    else{\r\n        lang = navigator.language.toLowerCase();\r\n    }\r\n\r\n    let localeObj;\r\n\r\n    if (lang.includes(this.ruLocale)) {\r\n        localeObj = ru;\r\n        this.locale = this.ruLocale;\r\n    }\r\n    else if (lang.includes(this.frLocale)) {\r\n        localeObj = fr;\r\n        this.locale = this.frLocale;\r\n    }\r\n    else if (lang.includes(this.zhLocale)) {\r\n        localeObj = zh;\r\n        this.locale = this.zhLocale;\r\n    }\r\n\r\n    if (localeObj)\r\n        Object.keys(translations).forEach((key) => {\r\n            if (localeObj[key])\r\n                translations[key] = localeObj[key];\r\n        });\r\n};\r\n\r\ntranslations.enLocale = \"en\";\r\ntranslations.ruLocale = \"ru\";\r\ntranslations.frLocale = \"fr\";\r\ntranslations.zhLocale = \"zh\";\r\n\r\nexport default translations;","const translations = \r\n{\r\n    pageTitle: \"xOPS CPU Benchmark: Performance Database\",\r\n    aboutTitle:  \"xOPS CPU Benchmark: About App\",\r\n    downloadTitle:  \"xOPS CPU Benchmark: Download\",\r\n    title: \"xOPS CPU Benchmark\",\r\n    subTitle: \"Performance Chart\",\r\n    ST_FLT: \"[F]loating single-threaded\",\r\n    MT_FLT: \"[F]loating multi-threaded\",\r\n    ST_INT: \"[I]nteger single-threaded\",\r\n    MT_INT: \"[I]nteger multi-threaded\",\r\n\r\n    ST_FLT_s: \"[F]lt. ST\",\r\n    MT_FLT_s: \"[F]lt. MT\",\r\n    ST_INT_s: \"[I]nt. ST\",\r\n    MT_INT_s: \"[I]nt. MT\",\r\n\r\n    ST_FLT_f: \"Floating single-threaded\",\r\n    MT_FLT_f: \"Floating multi-threaded\",\r\n    ST_INT_f: \"Integer single-threaded\",\r\n    MT_INT_f: \"Integer multi-threaded\",\r\n\r\n    performance: \"Performance\",\r\n    nothingToShow: \"Nothing to show\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    Windows: \"[W]indows\",\r\n    all: \"All\",\r\n    gflops: \"GFLOPS\",\r\n    ginops: \"GINOPS\",\r\n\r\n    hitEnter: \"Hit Enter & fix top result\",\r\n    hintDoubleTap: \"Double tap to fix record at the top\",\r\n    hintSwipe: \"Swipe left or right to change test\",\r\n    close: \"[C]lose\",\r\n    yourDevice: \"Your device\",\r\n\r\n    result_FSM: \"Flt.S÷M\",\r\n    result_ISM: \"Int.S÷M\",\r\n\r\n    result_FS: \"Flt.S\",\r\n    result_FM: \"Flt.M\",\r\n    result_IS: \"Int.S\",\r\n    result_IM: \"Int.M\"\r\n}\r\n\r\nexport default translations;","import React, { Component } from 'react';\r\n\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nclass PressableLink extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n    this.initShortcut = this.initShortcut.bind(this);\r\n\r\n    this.shortcut = null;\r\n    if (this.props.children){\r\n      let match = this.props.children.match(shortcutRegex);\r\n      if (match && match.length === 1)\r\n        this.shortcut = match[0].toLowerCase();\r\n    }\r\n  }\r\n\r\n  initShortcut() {\r\n    if (this.shortcut && !this.keyPressSubscribed) {\r\n      document.addEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  onKeyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcut === e.key && this.props.onClick)\r\n      {\r\n        this.props.onClick();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n  }\r\n\r\n  render() {\r\n    this.initShortcut();\r\n    return <a className={this.props.className} onClick={this.props.onClick}>{this.props.children}</a>\r\n  }\r\n\r\n}\r\n\r\nexport default PressableLink;","import React, { Component } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass ListSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.selectAll = this.selectAll.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }\r\n\r\n  toggle(key) {\r\n    if (this.props.selectedKey.includes(key)) { // remove key\r\n      if (this.props.selectedKey.length > 1) {\r\n        return this.props.selectedKey.filter(k => k !== key);\r\n      }\r\n      else {\r\n        return this.props.selectedKey;\r\n      }\r\n    }\r\n\r\n    this.props.selectedKey.push(key);\r\n\r\n    return this.props.selectedKey;\r\n  }\r\n\r\n  selectAll() {\r\n    return this.props.items.map(p => p.key);\r\n  }\r\n\r\n  onKeyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcuts.has(e.key))\r\n      {\r\n        let val = this.shortcuts.get(e.key);\r\n\r\n        //TODO - add suport for repeting shortcuts in multiselect list\r\n        if (Array.isArray(val)){ // single select, repeat shortcuts\r\n          let key = val[0].key;\r\n          \r\n          for (let i = 0; i < val.length; i++){\r\n            if (val[i].key === this.props.selectedKey){\r\n              if (i+1 < val.length) key = val[i+1].key;\r\n            }\r\n          }\r\n\r\n          this.props.itemClick(key);\r\n        }\r\n        else if (Array.isArray(this.props.selectedKey)){ // multi select select, non-repeat shortcuts        \r\n          this.props.itemClick(this.toggle(val.key));\r\n        } else if (val.key !== this.props.selectedKey) { // single select, non-repeat shortcuts\r\n          this.props.itemClick(val.key);\r\n        } \r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n  }\r\n\r\n  initShortcuts() {\r\n    this.prevItems = this.props.items;\r\n    this.shortcuts = new Map();\r\n    for (var i in this.prevItems) {\r\n      if (this.prevItems[i].shortcut) {\r\n        if (!this.shortcuts.has(this.prevItems[i].shortcut))\r\n          this.shortcuts.set(this.prevItems[i].shortcut, this.prevItems[i]);\r\n        else {\r\n          let sc = this.shortcuts.get(this.prevItems[i].shortcut);\r\n\r\n          if (Array.isArray(sc)) sc.push(this.prevItems[i]);\r\n          else {\r\n            let arr = [sc, this.prevItems[i]];\r\n            this.shortcuts.set(this.prevItems[i].shortcut, arr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.shortcuts.size > 0) {\r\n      document.addEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  updateShortcuts() {\r\n    if (!this.prevItems) {\r\n      this.initShortcuts();\r\n    }\r\n    else if (this.prevItems !== this.props.items) {\r\n      this.initShortcuts();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.updateShortcuts();\r\n\r\n    if (this.props.items)\r\n      return (\r\n        <ul className={this.props.className}>\r\n          {\r\n              this.props.items.map( // multiselect\r\n                i =>\r\n                  <li\r\n                    key={i.key}\r\n                    className={this.props.selectedKey.includes(i.key) ? \"selected\" : null}\r\n                    onClick={\r\n                      Array.isArray(this.props.selectedKey) ? \r\n                      () => this.props.itemClick(this.toggle(i.key)) : // multiselect\r\n                      () => this.props.itemClick(i.key) //single select\r\n                    }\r\n                  >\r\n                    {i.name}\r\n                  </li>\r\n              )\r\n          }\r\n\r\n          {\r\n            this.props.selectAll && <li onClick={() => this.props.itemClick(this.selectAll())}>{l18n.all}</li>\r\n          }\r\n        </ul>\r\n      )\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ListSelector;","import l18n from '../translations';\r\n\r\nconst results = \r\n{\r\n  addYourDeviceResult: function(yd){\r\n    // if (!yd.seqWrite && !yd.seqRead && !yd.randWrite && !yd.randRead && !yd.memCopy){\r\n    //   console.log(\"Invaid 'Your device' data\");\r\n    //   return;\r\n    // }\r\n\r\n    if (!yd.device) yd.device = l18n.yourDevice;\r\n\r\n    yd.id = this.yourDeviceId;\r\n    yd.deviceDetail = \"\";\r\n\r\n    if (this.data.results[this.data.results.length-1].id === yd.id) this.data.results.pop();\r\n    this.data.results.push(yd);\r\n  },\r\n\r\n  getResults: function(platfroms, test, device, excludeIds){\r\n    let filters = [];\r\n\r\n    filters.push(r => !r.hidden);\r\n    \r\n    if (platfroms && Array.isArray(platfroms)){\r\n      filters.push(r => platfroms.includes(r.platform));\r\n    }\r\n\r\n    if (device){\r\n      device = device.trim().toLowerCase();\r\n      if (device) {\r\n        if (device.length < 4)\r\n          filters.push(r => r.device.toLowerCase().includes(device));\r\n        else\r\n          filters.push(r => r.device.toLowerCase().includes(device) || r.deviceDetail.toLowerCase().includes(device));\r\n      }\r\n    }\r\n\r\n    if (excludeIds && excludeIds.length > 0){\r\n      filters.push(r => !excludeIds.includes(r.id));\r\n    }\r\n\r\n    let result = this.data.results.filter(r => \r\n      {\r\n        let condition = true;\r\n        for (let i = 0; i < filters.length; i++){\r\n          condition &= filters[i](r);\r\n          if (!condition) return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n    if (test){\r\n      result.sort(\r\n        (a,b) => \r\n          b[test] - a[test]\r\n        );\r\n    }\r\n\r\n    if (result.length > 0) this.lastResultId = result[0].id; else this.lastResultId = null;\r\n\r\n    return result;\r\n  },\r\n\r\n  getResultById: function(id){\r\n    if (id < 0 || id > this.data.results.length) return null;\r\n    if (id === 0 && this.data.results[this.data.results.length-1].id === 0) return this.data.results[this.data.results.length-1];\r\n\r\n    return this.data.results[id-1];\r\n  },\r\n\r\n  idExists: function(id){\r\n    return this.getResultById(id) != null;\r\n  },\r\n\r\n  setPercents: function(results, test) {\r\n    let maxVal = 0;\r\n    for (let i = 0; i < results.length; i++){\r\n      if (results[i][test] > maxVal) maxVal = results[i][test];\r\n    }\r\n    for (let i = 0; i < results.length; i++){\r\n      results[i].percent = results[i][test]/maxVal;\r\n    }\r\n  },\r\n\r\n  getLastResultId: function(){\r\n    if (this.lastResultId) return this.lastResultId;\r\n    return null;\r\n  }\r\n}\r\n\r\nresults.lastResultId = null;\r\nresults.yourDeviceId = 0;\r\n\r\nexport default results;","import db from './db';\r\n\r\nexport default db;","import dictionaries from './dictionaries';\r\nimport results from './results';\r\n\r\nconst db_version_url = \"https://raw.githubusercontent.com/maxim-saplin/xOPS-Web/master/Results_version.json\";\r\nlet db_url = \"https://raw.githubusercontent.com/maxim-saplin/xOPS-Web/master/Results.json\";\r\nconst db_version_sotrage_key = \"xops_db_version\";\r\nconst db_sotrage_key = \"xops_db\";\r\n\r\nconst db = {\r\n    dictionaries : dictionaries,\r\n    results : results,\r\n    \r\n    init: function (){\r\n        let fetchVersion = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_version_url, {cache: \"no-store\"})\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(result => {\r\n                    storage.setItem(db_version_sotrage_key, result.v);\r\n                    this.version = result.v;\r\n                    resolve(result.v);\r\n                });\r\n            });\r\n        };\r\n\r\n        let fetchDb = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_url, {cache: \"no-store\"})\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    storage.setItem(db_sotrage_key, JSON.stringify(result));\r\n                    dictionaries.data = result;\r\n                    results.data = result;\r\n                    resolve(result);\r\n                })\r\n            });\r\n        };\r\n\r\n        let promise = null;\r\n\r\n        let storage = window.localStorage;\r\n\r\n        let data = storage.getItem(db_sotrage_key);\r\n        if (data) {\r\n          try { data = JSON.parse(data);} catch{};\r\n          if (!data.results) data = null; // shallow check for corrupt data\r\n        }\r\n        let localDbVersion = storage.getItem(db_version_sotrage_key);\r\n\r\n        if (data){\r\n            promise = new Promise( resolve => {\r\n                fetchVersion()\r\n                .then(result => {\r\n\r\n                    if (result !== localDbVersion){\r\n                        fetchDb().then(result => resolve(result));                    \r\n                    }\r\n                    // local data is up to date\r\n                    else{ \r\n                        dictionaries.data = data;\r\n                        results.data = data;\r\n                        resolve(data)\r\n                    };\r\n                });\r\n            });\r\n        }\r\n        else{\r\n            fetchVersion();\r\n            promise = fetchDb();\r\n        }\r\n\r\n        return promise;\r\n    },\r\n\r\n    initFake: function() {\r\n      dictionaries.data = {\"results\":[{\"id\":1,\"device\":\"Xiaomi Mi 8 SE\",\"platform\":\"Android\",\"deviceDetail\":\"Snapdragon 710\",\"deviceComment\":\"\",\"deviceYear\":2018,\"ST_FLT\":1.6,\"MT_FLT\":8,\"ST_INT\":2.5,\"MT_INT\":11.7,\"hidden\":\"\"},{\"id\":2,\"device\":\"Apple 15\\\" MacBook Pro\",\"platform\":\"macOS\",\"deviceDetail\":\"Core i7 8850H\",\"deviceComment\":\"\",\"deviceYear\":2018,\"ST_FLT\":4.5,\"MT_FLT\":39.7,\"ST_INT\":8.2,\"MT_INT\":57.1,\"hidden\":\"\"},{\"id\":3,\"device\":\"Apple 15\\\" MacBook Pro\",\"platform\":\"Windows\",\"deviceDetail\":\"Core i7 8850H, Bootcamp\",\"deviceComment\":\"\",\"deviceYear\":2018,\"ST_FLT\":4.3,\"MT_FLT\":36.5,\"ST_INT\":8.3,\"MT_INT\":54.6,\"hidden\":\"\"},{\"id\":4,\"device\":\"Galaxy Note 10\",\"platform\":\"Android\",\"deviceDetail\":\"Snapdragon 855\",\"deviceComment\":\"\",\"deviceYear\":2019,\"ST_FLT\":3.6,\"MT_FLT\":21.5,\"ST_INT\":5,\"MT_INT\":21.5,\"hidden\":\"\"},{\"id\":5,\"device\":\"Lenovo ThinkPad 13 2nd Gen\",\"platform\":\"Windows\",\"deviceDetail\":\"Core i5-7200U\",\"deviceComment\":\"\",\"deviceYear\":2017,\"ST_FLT\":3.2,\"MT_FLT\":9.2,\"ST_INT\":6.1,\"MT_INT\":12.5,\"hidden\":\"\"}],\"platforms\":[\"Android\", \"macOS\", \"Windows\"],\"tests\":[\"ST_FLT\", \"MT_FLT\", \"ST_INT\", \"MT_INT\"]};\r\n      results.data = dictionaries.data;\r\n    }\r\n};\r\n\r\nexport default db;","import React, { PureComponent } from 'react';\r\nimport db from './data';\r\nimport l18n from './translations';\r\n\r\nclass Search extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textChanged = this.textChanged.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n    this.moveCursorToEnd = this.moveCursorToEnd.bind(this);\r\n\r\n    this.state = {\r\n      extraSpaces: props.value ? false : true, \r\n      blink: false,\r\n      showHitn: false\r\n    };\r\n\r\n    this.textInput = React.createRef();\r\n  }\r\n\r\n  textChanged(e){\r\n    if (this.enterPressed) {\r\n      e.target.innerText = \"\"; \r\n      this.enterPressed = false;\r\n    }\r\n    \r\n    if (this.props.searchChanged) {\r\n      this.props.searchChanged(e.target.innerText, true);\r\n    }\r\n    if (e.target.innerText && this.state.extraSpaces) this.setState({extraSpaces: false});\r\n    else if (!e.target.innerText && !this.state.extraSpaces) this.setState({extraSpaces: true});\r\n  }\r\n\r\n  onKeyPress(e){\r\n    if (e.key === \"Enter\" || e.charCode === 13) {\r\n      this.enterPressed = true;\r\n      let last = db.results.getLastResultId();\r\n      if (e.target.innerText && this.props.enterPressed && last) this.props.enterPressed(last);\r\n    }\r\n    else this.enterPressed = false;\r\n  }\r\n\r\n  moveCursorToEnd(el){\r\n    if(el.innerText && document.createRange)\r\n    {\r\n      window.setTimeout(() =>\r\n        {\r\n          let selection = document.getSelection();\r\n          let range = document.createRange();\r\n      \r\n          range.setStart(el.childNodes[0],el.innerText.length);\r\n          range.collapse(true);\r\n          selection.removeAllRanges();\r\n          selection.addRange(range);\r\n        }\r\n      ,1);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if (document.activeElement === this.textInput.current) \r\n      this.moveCursorToEnd(this.textInput.current);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>      \r\n        <span className=\"searchBox\">\r\n          <span \r\n            contentEditable=\"true\" \r\n            ref={this.textInput} \r\n            onInput={this.textChanged} \r\n            onKeyPress={this.onKeyPress}\r\n            onFocus={(e) => {this.setState({blink:true}); this.moveCursorToEnd(e.nativeEvent.target)}} \r\n            onBlur={() => {this.setState({blink:false})}}\r\n          >\r\n          {this.props.value}\r\n          </span>\r\n          <span \r\n            className={this.state.blink ? \"blink\" : \"\"} \r\n            onClick={() => {this.textInput.current.focus()}}\r\n          >\r\n            {!this.state.blink && this.state.extraSpaces && \"\\xA0\\xA0\\xA0\\xA0\"}_\r\n          </span>\r\n          &lt;/\r\n        </span>\r\n        <span className={!this.state.extraSpaces && this.state.blink ? \"searchBoxHint visible\" : \"searchBoxHint\"}>\r\n          {l18n.hitEnter}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { PureComponent } from 'react';\r\n\r\nclass TestResultDetailsItem extends PureComponent {\r\n  render() {\r\n    return(\r\n    <>\r\n      <span className={this.props.selectedTest === this.props.test? \"singleRes selected\" : \"singleRes\"}>\r\n      <span className=\"ttl\">{this.props.testName}</span>\r\n      <br/>\r\n      <span className=\"res\">{this.props.result}</span>\r\n      <br className=\"unitBreak\"/>\r\n      <span className=\"unit\">{this.props.unit}</span>\r\n      </span>\r\n    </>);\r\n  }\r\n}\r\n\r\nexport default TestResultDetailsItem;","import React, { PureComponent } from 'react';\r\nimport TestResultDetailsItem from './TestResultDetailsItem';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResultDetails extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <span className={this.props.noHighlight ? \"centerColumn noHighlight\" : \"centerColumn\"}>\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.ST_FLT}\r\n          testName={l18n.result_FS}\r\n          unit={l18n.gflops}\r\n          result={i[db.dictionaries.ST_FLT]}\r\n        />\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.MT_FLT}\r\n          testName={l18n.result_FM}\r\n          unit={l18n.gflops}\r\n          result={i[db.dictionaries.MT_FLT]}\r\n        />\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.ST_INT}\r\n          testName={l18n.result_IS}\r\n          unit={l18n.ginops}\r\n          result={i[db.dictionaries.ST_INT]}\r\n        />\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.MT_INT}\r\n          testName={l18n.result_IM}\r\n          unit={l18n.ginops}\r\n          result={i[db.dictionaries.MT_INT]}\r\n        />        \r\n\r\n      </span>);\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default TestResultDetails;","import React, { PureComponent } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass TestResult extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <>\r\n        <span className=\"leftColumn\">\r\n          <em itemProp=\"name\">\r\n            {i.device}\r\n          </em>\r\n          <br />\r\n          <span className=\"greyed\" itemProp=\"description\">\r\n            {i.deviceYear}{i.deviceDetail && \",\"} {i.deviceDetail}\r\n          </span>\r\n        </span>\r\n        <span className=\"rightColumn\">\r\n          <span style={{ width: i.percent * 80 + \"%\" }} itemProp=\"throughput\" > \r\n            {i[this.props.selectedTest]} {this.props.selectedTest.includes(\"FLT\") ? l18n.gflops : l18n.ginops}\r\n          </span>\r\n          {this.props.closableX && <button onClick={() => this.props.selectedIdRemoved(i.id)}>X</button>}\r\n          {this.props.closableEsc && <button onClick={() => this.props.selectedIdRemoved(i.id)}>[Esc]</button>}\r\n        </span>\r\n      </>);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default TestResult;","import React, { PureComponent } from 'react';\r\n\r\nclass Hint extends PureComponent {\r\n  render() {\r\n    return <span className=\"hint\">{this.props.children}</span>\r\n  }\r\n}\r\n\r\nexport default Hint;","import React, { Component } from 'react';\r\nimport TestResultDetails from './TestResultDetails';\r\nimport TestResult from './TestResult';\r\nimport Hint from './Hint';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.handleSingleDblClicks = this.handleSingleDblClicks.bind(this);\r\n    this.state = {expandedId: null, doubleTapHint: false};\r\n    this.clickTimeout = null;\r\n  }\r\n\r\n  getAllResults(result) {\r\n    let text = l18n.performance + \"\\x0A\";\r\n    let tests = db.dictionaries.getTests();\r\n\r\n    for (var i = 0; i < tests.length; i++) {\r\n      text += l18n[tests[i].key + \"_s\"] + \": \" + result[tests[i].key] + \" \";\r\n      text += tests[i].key.includes(\"FLT\") ? l18n.gflops : l18n.ginops;\r\n      if (i !== tests.length - 1) text += \"\\x0A\";\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed){\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n    }\r\n  }\r\n\r\n  handleSingleDblClicks(e, singleClick, dblClick){\r\n    e.preventDefault();\r\n    if (this.clickTimeout !== null) {\r\n      console.log(\"Dbl\");\r\n      clearTimeout(this.clickTimeout)\r\n      this.clickTimeout = null;\r\n      if (dblClick) dblClick();\r\n    } \r\n    else {\r\n      console.log(\"Sngl\");\r\n      if (singleClick) singleClick();\r\n      this.clickTimeout = setTimeout(\r\n        ()=>{\r\n              clearTimeout(this.clickTimeout)\r\n              this.clickTimeout = null\r\n            },\r\n        300);\r\n    }\r\n  }\r\n\r\n  onKeyUp(e){\r\n    if ((e.key === \"Escape\" || e.keyCode === 27) && this.deletableId) {\r\n      this.props.selectedIdRemoved(this.deletableId);\r\n    }\r\n  }\r\n\r\n  keyboardEventsSubscription() {\r\n    if (!this.deletableId && this.keyPressSubscribed) {\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n    else if (this.deletableId && !this.keyPressSubscribed) {\r\n      document.addEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let items = db.results.getResults(this.props.selectedPlatforms, this.props.selectedTest, this.props.device, this.props.selectedResultIds);\r\n    let selectedCount = -1;\r\n    this.deletableId = null;\r\n    let title = \"\";\r\n\r\n    let selectedResultIds = this.props.selectedResultIds;\r\n    let expandedId = this.state.expandedId;\r\n\r\n    if (selectedResultIds && selectedResultIds.length > 0){\r\n      let selectedResults = selectedResultIds.map(id => db.results.getResultById(id));\r\n      items = selectedResults.concat(items);\r\n      selectedCount = selectedResults.length;\r\n      this.deletableId = selectedResults[selectedCount-1].id;\r\n\r\n      for (let i = 0; (i < 2) && (i < selectedResults.length); i++){\r\n        title += selectedResults[i].device;\r\n        if (i === 1 || i === selectedResults.length-1) title +=\" - \"; else title +=\", \";\r\n      }\r\n    }\r\n\r\n    if (this.props.setTitle) this.props.setTitle(title + l18n.pageTitle);\r\n    \r\n    this.keyboardEventsSubscription();\r\n\r\n    if (items && items.length > 0) {\r\n      db.results.setPercents(items, this.props.selectedTest);\r\n      return (\r\n        <>\r\n        {this.state.doubleTapHint && <Hint>{l18n.hintDoubleTap}</Hint>}\r\n        {items.map(i =>\r\n          <div \r\n            itemScope\r\n            key={i.id} \r\n            className={selectedCount-- > 0 ? \"item selected\" : (expandedId === i.id) ? \"item highlight\" : \"item\"} \r\n            id={selectedCount === 0 ? \"last\" : null}\r\n            title={this.getAllResults(i)}\r\n            onClick={\r\n              (e) =>\r\n              {\r\n                this.handleSingleDblClicks(\r\n                  e,\r\n                  //single click\r\n                  (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n                  () => {\r\n                    this.setState({expandedId: expandedId === i.id ? null : i.id});\r\n                    if (!this.state.doubleTapHint) this.setState({doubleTapHint:true});\r\n                  }\r\n                  : null,\r\n                  //dbl click\r\n                  (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n                  (e) => {\r\n                    let selection = window.getSelection();\r\n                    if (selection.empty) selection.empty(); \r\n                    this.props.resultSelected(i.id); \r\n                    if (expandedId === i.id) this.setState({expandedId: null});\r\n                  }\r\n                  : null\r\n                );\r\n              }\r\n            }\r\n          >\r\n            <TestResult\r\n              item={i}\r\n              percent={i.percent} // hack to make PureComponent re-render, somehow for selected id's percent inside 'item' is'nt considered as changed, though the filed differs. For non selcted ids it works fine\r\n              selectedTest={this.props.selectedTest }\r\n              selectedIdRemoved={this.props.selectedIdRemoved}\r\n              closableX={selectedCount > 0 && i.id !== db.results.yourDeviceId}\r\n              closableEsc={selectedCount === 0 && i.id !== db.results.yourDeviceId}\r\n            />\r\n            {((selectedCount >= 0) || (expandedId === i.id)) && <TestResultDetails item={i} noHighlight={expandedId === i.id} selectedTest={this.props.selectedTest }/> }\r\n          </div>)}\r\n      </>)\r\n    }\r\n    else return <div className=\"nothing\">{l18n.nothingToShow}</div>\r\n  }\r\n}\r\n\r\nexport default TestResults;","import React from 'react';\nimport windows from './img/windows.svg';\nimport macOS from './img/macos.svg';\nimport google_play from './img/google-play.svg';\nimport apk from './img/apk.svg';\nimport github from './img/github.svg';\nimport linux from './img/linux.svg';\n\nexport default function DownloadLinks(props){\n    return (\n        <>\n            <a href=\"https://github.com/maxim-saplin/xOPS-App/releases/download/1.1.2/xOPS-Portable.exe.zip\" \n            target=\"_blank\">\n                <img src={windows}/>\n                <br/>Windows\n            </a>\n            <a href=\"https://github.com/maxim-saplin/xOPS-App/releases/download/1.1.0/xOPS.app.zip\" \n            target=\"_blank\">\n                <img src={macOS}/>\n                <br/>macOS\n            </a>\n            <a href=\"https://play.google.com/store/apps/details?id=xcom.saplin.xOPS\" \n            target=\"_blank\">\n                <img src={google_play}/>\n                <br/>Android\n            </a>\n            <a href=\"https://github.com/maxim-saplin/xOPS-App/releases/download/1.1.2/xcom.saplin.xOPS.apk\" \n            target=\"_blank\">\n                <img src={apk}/>\n                <br/>.APK\n            </a>\n            <a href=\"https://github.com/maxim-saplin/xOPS-App\" \n            target=\"_blank\">\n                <img src={github}/>\n                <br/>GitHub\n            </a>\n            <a href=\"https://github.com/maxim-saplin/xOPS-Console/releases/tag/1.0.2\" \n            style={{opacity: 0.65}}\n            target=\"_blank\">\n                <img src={linux}/>\n                <br/>Linux\n            </a>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B]ack to Chart</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>Download xOPS CPU Benchmark</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>How the Chart Results are Obtained</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                <em>xOPS</em> application is used to measure storage performance. \n                {!props.inApp && <> See download links above.</>}\n                </p>\n                <p>\n                At least 3 test runs are done and average values are presented. Default options are used (same for integer and float tests ) - 32 bit precision, number of threads\n                is determined as a double of the number of CPU cores (e.g. 8 threads with 4 cores) .\n                To avoid intereferences and side effects foreground/running apps are closed, network activity is checked to be inactive (e.g. no updates, downloads).\n                </p>\n            </div>\n            <br/>\n            </>}\n\n            <h1>How the App Works</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                The app calculates how many operations (add, subtract, multiply, divide, etc.) a CPU can perform in a given second with either fractional (floating-point) or integer numbers:\n                </p>    \n                <p>\n                    <ol>\n                        <li>FLOPS - Floating-point Operations Per Second, performance measurement of Floating Point Unit (FPU). </li>\n                        <li>INOPS - Integer Operations Per Second, measurement of Arithmetic Logic Unit (ALU)</li>\n                    </ol>\n                </p>\n                <p>\n                E.g. 1 G(iga)FLOPS means that CPU can do 1 billion floating-point operations per second (such as 1.1+2.2=3.3).\n                </p>\n                <p>\n                General app logic is typically reliant on integer operations, while graphics and games rely on floating-point ones. The faster your CPU can crunch numbers, the faster your apps can run.\n                </p>\n                <p>\n                Tests are executed in single and multithreaded modes and reflect multi-core and single-core performance. \n                </p>\n                <p>\n                The tests are \"isolated\", meaning that they focus on creating CPU load only while ingoring other parts of the system (such as memory, cache, storage, network etc.). There're many factors determining systems' performance and CPU although the major one  is not the only. While the app doesn’t give a single simple answer/score to the questions \"How fast is the phone/laptop/PC?\", it gives a comparable performance metric of one important piece of your device - the CPU.\n                </p>\n                <p>\n                xOPS doesn't implement LINPACK benchmark (which is typically associated with majority of FLOPS mentions), the results can be a fair ballpark comparison to LINPACK (especially when comparing to supercomputers). E.g. on a laptop with Intel Core i7 8th Gen the original LINPACK program (compiled with GCC) gives 5.8 GFLOPS single threaded, xOPS - 4.5 GFLOPS. \n                </p>\n                <p>\n                At the same time, LINPACK implementing a sophisticated algorithm has much room for optimizations. Intel optimized LINPACK gives ~30 GFLOPS. This makes the results of the test very dependent on multiple factors (compiler optimizations, runtime environment etc.). \n                </p>\n                <p>\n                xOPS being cross-platform targets at ensuring consistency in results while running on many devices/OS's. To do so there're few features:\n                <ol>\n                    <li>\n                Triviality of the operations<br/>\n                The app implements plain loop, with no branches, externals calls, complex data structures etc. There're few consequent scalar operations (such as add and multiple) which are repeated millions of times.\n                </li>\n                <li>\n                Counting CIL instructions<br/>\n                Arm and x86 architectures are very different, same operation can be represented by different number of instructions. Different compilers can also produce different machine code (even for the same architecture). The app is based on .NET which is compiled to bytecode - CIL (Common Intermediate Language). This bytecode is latter translated to native code. As a reference point the number of operations in a single loop is counted as a number of CIL instructions. This abstracts away the question of dealing with various architectures and machine codes.\n                </li>\n                <li>\n                Disabling optimizations<br/> \n                Compiler is instructed to disable optimizations for the measurement loop. The body of the loop is written in the most explicit way. All of that is aimed at producing the most straightforward machine code.\n                </li>\n                <li>\n                Experimenting, finding the right mixture of operations, baselining the results<br/>\n                .NET platform assumes there's JIT (Just-in-Time) or AOT (ahead-of-time) compiler and runtime for the code. There're different versions of .NET (Mono for Mac and Android, .NET Framework for Windows) and different mixtures of JITs and runtimes can introduce a significant source of variation (machone code produced, instruction level parallelism, branch predictions etc.). To make sure the results are meaningful and consistent a solid effort has been put into tinkering with the code and trying it on multiple devices/environments.\n                </li>\n                <li>\n                Promptness<br/>\n                Tests take 5-20 seconds (depending on device performance) compared to minutes with other test suites.\n                </li>\n                </ol>\n                </p>\n                <p>\n                With the above measures taken the app when run on the same MacBook (in Windows Bootcamp, macOS and Android Emulator) shows the spread of results at 5%. xOPS results when compared against another popular cross-platform benchmark (at version 5 now) shows 95% correlation of scores.\n                </p>\n                <p>\n                The app is open source: <a href=\"https://github.com/maxim-saplin/xOPS-App\">https://github.com/maxim-saplin/xOPS-App</a>\n                </p>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B] Назад к списку</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>Скачать xOPS Бенчмарк</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>Как получены результаты</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                Для получения результатов используется приложение <em>xOPS</em>. \n                {!props.inApp && <> Ссылки для скачивания выше.</>}\n                </p>\n                <p>\n                Выполняется по крайней мере 3 теста, приводяться усредненные значения. Опции по умолчанию (для целочисленных и дробных вычислений):\n                точность 32 бита, количество потоков определяеться как двойное количество ядер процессора(8 ядер - 16 потоков). \n                Для избежания влияния на результаты закрываются активные приложения, проверяется, что сетевая активность минимальна (нету запущенных загрузок и обновлений).\n                </p>\n            </div>\n            <br/>\n            </>}\n            \n            <h1>Как работает приложение</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                Приложение измеряет сколько операций (сложение, вычитание, умножение, деление, сравнение и т.п.) может выполнить центральный процессор (ЦП) над дробными (floating-point) и целыми (integer) числами:\n                </p>    \n                <p>\n                    <ol>\n                        <li>FLOPS (Floating-point Operations Per Second) - количество операций с дробными числами в секунду, измерение производительности математического сопроцессора (Floating Point Unit, FPU).</li>\n                        <li>INOPS (Integer Operations Per Second) - количество операций с целыми числами в секунду, измерение производительности арифметико-логического устройства (Arithmetic logic unit, ALU).</li>\n                    </ol>\n                </p>\n                <p>\n                Например 1 G(iga)FLOPS означает, что процессор способен произвести 1 миллиард операций с дробными числами (такими как 1.1+2.2=3.3).\n                </p>\n                <p>\n                Основная логика приложений зачастую построена на целочисленных вычислениях. Графические задачи и игры полагаются на дробные вычисления.   \n                </p>\n                <p>\n                И АЛУ и математический сопроцессор тестируются как в однопоточном, так и многопоточном режиме, что отражает производительность как отдельного ядра, так и всех ядер, задействованных одновременно.\n                </p>\n                <p>\n                Тесты \"изолированные\", что означает что они нагружают исключительно центральный процессор игнорируя иные компоненты вычислительной системы (память, кэш, хранилище, сеть, оптимизации ПО). Существует множество факторов, определяющих производительность, хоть процессор один из важнейших, он не является единственным. Приложение не пытается дать простой ответ на сложный вопрос \"Насколько быстр мой телефон/ноутбук/компьютер?\". Однако оно дает оценку одного важного компонента вашего устройства - процессора.\n                </p>\n                <p>\n                xOPS не реализует бенчмарк LINPACK (который обычно подразумевается, когда упоминается FLOPS). Тем не менее результаты в первом приближении можно сравнивать с LINPACK (особенно при сравнении с суперкомпьютерами). Например на ноутбуке с Intel Core i7 8-го поколения оригинальная программа LINPACK (скомпилированная в GCC) дает 5,8 GFLOPS (один поток), xOPS - 4,5 GFLOPS.\n                </p>\n                <p>\n                В то же время LINPACK, реализующий сложный алгоритм, имеет широкое поле для оптимизации. Например пакет Intel LINPACK показывает порядка~ 30 GFLOPS на том же железе.  Т.о. результаты LINPACK представляют сложность с точки зрения сопоставимости: из-за сложностей с минимизацией таких факторов, как оптимизации компилятора, среды выполнения и т.д.\n                </p>\n                <p>\n                xOPS является кроссплатформенной программой и ставит целью обеспечение согласованности результатов при работе на многих устройствах и ОС. Это достигается за счет:\n                <ol>\n                    <li>\n                    Тривиальности операций.<br/>\n                    В приложении реализован простой цикл без ветвей, внешних вызовов, сложных структур данных и т.п. Существует несколько последовательных скалярных операций (таких как сложение, умножение), которые повторяются миллионы раз.\n                    </li>\n                    <li>\n                    Подсчета CIL инструкций.<br/>\n                    Архитектуры Arm и x86 очень разные, одна и та же операция может быть представлена ​​различным количеством инструкций. Разные компиляторы также могут проивзодить различный машинный код для идентичного исходного кода (даже для одной и той же архитектуры). xOPS основан на .NET и компилируется в промежуточный байт-код - CIL (Common Intermediate Language). Он в свою очередь в дальнейшем преобразуется в машинный код. За единицу измерения операции xOPS принимает одну CIL интсрукцию. Т.о. приложение измеряет количество CIL инструкций, которые способен выполнить процессор в единицу времени и абстрагируется от специфичный машинных инструкций.\n                    </li>\n                    <li>\n                    Отключения оптимизаций.<br/> \n                    Компиляторы сконфигурированы т.о., чтобы оптимизации не применялись к главному циклу. Также код внутри цикла написан максимально очевидным способом: одна строчка - одна операция над операндом. Это сделано для того, что байткод превращался в машинный код наиболее очевидным способом \"влоб\".\n                    </li>\n                    <li>\n                    Экспериментирования, поиска оптимального сочетания операций, сравнения результатов с дргуими бенчмарками.<br/>\n                    Платформа .NET предполагает наличие JIT (Just-in-Time) или AOT (Ahead-of-Time) компилятора и промежуточной среды выполнения (Runtime). Существуют разные версии .NET (Mono для Mac и Android, .NET Framework для Windows), различные версии JIT. Комбинации этих факторов представляют значительный источник вариации результатов (разный машинный код, параллелизм на уровне инструкций, предсказания ветвлений и т. д.). Чтобы убедиться, что результаты являются значимыми и сопоставимыми, при поиске оптимального микса и настроек кода постоянно происходило сравнение результатов на разных устройствах и ОС.\n                    </li>\n                    <li>\n                    Быстроты.<br/>\n                    Тесты выполняются за считанные секунды, в сравнении с минутами, которые требуются другим бенчмаркам.\n                    </li>\n                </ol>\n                </p>\n                <p>\n                С учетом вышеуказанных мер приложение, запущенное на том же MacBook (в Windows Bootcamp, macOS и Android Emulator), показывает разброс результатов в 5%. Также результаты xOPS на 95% коррелируют с показателями другого популярного кросс-платформенного бенчмарка (по результатам измерения 15 устройств).\n                </p>\n                <p>\n                Исходный код: <a href=\"https://github.com/maxim-saplin/xOPS-App\">https://github.com/maxim-saplin/xOPS-App</a>\n                </p>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props) {\n    return (\n        <>\n            {props.inApp && <br />}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[R]etour aux résultats</PressableLink>\n            <br />\n            {!props.inApp &&\n                <div class=\"downloadBox\">\n                    <h1>Télécharger xOPS CPU Benchmark</h1>\n                    <br />\n                    <DownloadLinks />\n                </div>}\n\n            {!props.download &&\n                <>\n                    <h1>Comment les résultats sont obtenus</h1>\n                    <br />\n                    <div className=\"text\">\n                        <p>\n                            L'application <em> xOPS </em> est utilisée pour mesurer les performances de stockage.\n                {!props.inApp && <>Voir les liens de téléchargement ci-dessus.</>}\n                        </p>\n                        <p>\n                            Au moins 3 essais sont effectués et des valeurs moyennes sont présentées. Les options par défaut sont utilisées (idem pour les tests de nombres entiers et flottants) - précision 32 bits, nombre de threads\n                            est déterminé comme le double du nombre de cœurs de processeur (par exemple, 8 threads avec 4 cœurs).\n                            Pour éviter les interférences et les effets secondaires, les applications de premier plan / en cours d'exécution sont fermées, l'activité du réseau est vérifiée pour être inactive (par exemple, aucune mise à jour, téléchargement)\n                </p>\n                    </div>\n                    <br />\n                </>}\n\n            <h1>Comment fonctionne l'application</h1>\n            <br />\n            <div className=\"text\">\n                <p>\n                L'application calcule le nombre d'opérations (addition, soustraction, multiplication, division, etc.) qu'un processeur central peut effectuer en une seconde donnée avec des nombres fractionnaires (virgule flottante) ou entiers:\n                </p>\n                <p>\n                    <ol>\n                        <li> FLOPS (Floating-point Operations Per Second) - quantité d’opérations à virgule flottante, mesure de la performance du coprocesseur mathématique (Floating Point Unit, FPU).</li>\n                        <li> INOPS (Integer Operations Per Second) - quantité d’opérations à nombres entiers par seconde, mesure de la performance de l'unité logique arithmétique (Arithmetic logic unit, ALU).</li>\n                    </ol>\n                </p>\n                <p>\n                    Par exemple, 1 G(iga)FLOPS signifie que le processeur peut effectuer 1 milliard d'opérations à virgule flottante (telles que 1,1 + 2,2 = 3,3).\n                </p>\n                <p>\n                    La logique générale de l’application repose généralement sur des opérations à nombres entiers, tandis que les problèmes graphiques et les jeux reposent sur des opérations à virgule flottante.\n                </p>\n                <p>\n                    Les tests sont exécutés en modes single-thread et multithread et reflètent les performances multicœur et monocœur.\n                </p>\n                <p>\n                    Les tests sont \"isolés\", ce qui signifie qu'ils se concentrent uniquement sur la charge du processeur central en ignorant les autres parties du système (telles que la mémoire, le cache, le stockage, le réseau, etc.). Bien que l'application ne donne pas une réponse simple à une des questions compliquées \"Quelle est la performance du téléphone/de l’ordinateur portable/du PC?\", elle évolue un des composants les plus importants de votre appareil - le processeur.\n                </p>\n                <p>\n                    xOPS n'implémente pas le benchmark LINPACK (qui est généralement associé à la majorité des mentions FLOPS), les résultats peuvent être comparées en première approximation à LINPACK (en particulier lors de la comparaison avec des supercalculateurs). Par exemple, sur un ordinateur portable avec Intel Core i7 8e génération, le programme LINPACK (compilé avec le GCC) donne 5,8 GFLOPS (single-thread), xOPS - 4,5 GFLOPS.  \n                </p>\n                <p>\n                    En même temps, LINPACK implémentant un algorithme complexe, a beaucoup de possibilités pour les optimisations. Par exemple, le package Intel LINPACK donne ~ 30 GFLOPS sur le même matériel. Cela rend les résultats du test très dépendants de plusieurs facteurs (optimisations du compilateur, environnement d'exécution, etc.).\n                </p>\n                <p>\n                    xOPS est un programme multiplateforme qui a pour objectif la cohérence des résultats lors de l'exécution sur de nombreux appareils / systèmes d'exploitation. Ceci est accompli grâce à ce qui suit:\n                <ol>\n                    <li>\n                        Trivialité des opérations <br />\n                        L'application implémente un cycle simple, sans branches, appels externes, structures de données complexes, etc. Il y a peu d'opérations scalaires (telles que l’addition, la multiplication) qui sont répétées des millions de fois.\n                    </li>\n                    <li>\n                        Comptage des instructions CIL.<br />\n                        Les architectures Arm et Intel sont très différentes, la même opération peut être représentée par un nombre d'instructions différent. Des compilateurs différents peuvent également produire un code machine différent (même pour la même architecture). L'application xOPS est basée sur .NET et compilée en bytecode-CIL (Common Intermediate Language). Ce bytecode est ensuite transformé en code machine. xOPS prend pour unité de mesure d’opération une instruction CIL. Ainsi l’application mesure le nombre d'instructions CIL que le processeur est capable d’exécuter par unité de temps.\n                    </li>\n                    <li>\n                        Désactivation des optimisations <br />\n                        Les compilateurs sont configurés à ne pas appliquer les optimisations à la boucle principale. Le corps de la boucle est écrit de la manière la plus évidente. Tout cela vise à produire le code machine le plus simplement possible.\n                    </li>\n                    <li>\n                        Expérimentations, recherche de combinaison optimale d’opérations, comparaison des résultats avec celles d’autres benchmarks.<br />\n                        La plate-forme .NET suppose l’occurrence du compilateur JIT (Just-in-Time) ou AOT (Ahead-of-Time) et de l’environnement d'exécution (Runtime). Il existe des versions différentes de .NET (Mono pour Mac et Android, .NET Framework pour Windows) et des versions différentes de JIT. Les combinaisons de ces facteurs présentent une source significative de variation (code machine différent, parallélisme au niveau de l'instruction, prédictions de branchement, etc.). Pour s'assurer que les résultats sont significatifs et cohérents, un effort considérable a été entrepris à ajuster le code et l'essayer sur plusieurs appareils / systèmes d'exploitation.\n                    </li>\n                    <li>\n                        Promptitude<br />\n                        Les tests prennent 5 à 20 secondes (selon les performances de l'appareil) par rapport aux minutes avec d'autres suites de tests.\n                    </li>\n                </ol>\n                </p>\n                <p>\n                    Compte tenu de ce qui précède, l'application exécutée sur un MacBook (dans Windows Bootcamp, macOS et Android Emulator) affiche la variabilité des résultats de 5%. Les résultats de xOPS montrent une corrélation de 95% avec celles d’un autre benchmark multiplateforme populaire (conformément aux résultats de mesure de 15 appareils).\n                </p>\n                <p>\n                    L'application est open source:  <a href=\"https://github.com/maxim-saplin/xOPS-App\"> https://github.com/maxim-saplin/xOPS-App </a>\n                </p>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B]ack to Chart</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>下载xOPS CPU基准测试</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>图表结果如何获得</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                <em>xOPS</em> 应用程序用于衡量存储性能。 \n                {!props.inApp && <> 请参阅上方的下载链接。</>}\n                </p>\n                <p>\n                至少进行了3次测试，并给出了平均值。 使用默认选项（整数和浮点测试相同）-32位精度，线程数确定为CPU内核数的两倍（例如8个线程和4个内核）。为避免Intereferences和副作用关闭前景/正在运行的应用程序，请检查网络活动是否处于非活动状态（例如，不进行更新，下载）。\n                </p>\n            </div>\n            <br/>\n            </>}\n\n            <h1>应用程序的工作方式</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                该应用程序测量中央处理器对整数(integer)与分数(floating-point) 执行的运算（加法、减法、乘法、除法、比较等）的数量：\n                </p>    \n                <p>\n                    <ol>\n                        <li>FLOPS (Floating-point Operations Per Second)是指每秒分数运算数量，数学协处理器的运算速度 （Floating Point Unit, FPU）；</li>\n                        <li>INOPS (Integer Operations Per Second) 是指每秒整数运算数量，算术逻辑单元的运算速度(Arithmetic logic unit, ALU)</li>\n                    </ol>\n                </p>\n                <p>\n                例如，1 G(iga) FLOPS的意思是，该处理器能够使用分数执行十亿次运算 （即1.1+2.2=3.3）。\n                </p>\n                <p>\n                应用程序的基本逻辑系统通常基于整数计算，而图像处理与游戏基于分数计算。\n                </p>\n                <p>\n                既算术逻辑单元，又数学协处理器在单线程和多线程模式下经过测试，这都反映单核和多核处理器的运算速度。\n                </p>\n                <p>\n                上述的测试都是隔离测试，意思是，仅用于中央处理器，不包括计算机系统的其他组件（内存，高速缓存，存储，网络，软件优化）。\n                </p>\n                <p>\n                运算速度取决于很多因素，虽然处理器是最重要的部分之一，但它不是唯一的部分。该应用程序不试图简单地回答一个复杂的问题：我的手机/笔记本电脑/电脑的运行速度多大？但是，它评估设备的一个重要组成部分的，即处理器，的运行速度。xOPS不使用LINPACK基准（其与FLOPS通常使用）。然而，一级近似计算的结果是与 LINPACK可比较的（特别是与超级计算机相比）。比如，对于Intel Core i7第8代笔记本电脑使用的LINPACK程序原本（在GCC中被编译）的运算结果是5.8GFLOPS（在单线程模式下），xOPS - 4,5 GFLOPS。\n                </p>\n                <p>\n                同时，LINPACK实现复杂的算法并具有广泛的优化领域。例如， 在使用同样的硬件的情况下，Intel LINPACK程序包结果是~ 30 GFLOPS。因此，对 LINPACK 来说，最复杂的是使编译器优化、运行环境等因素最小化。\n                </p>\n                <p>\n                xOPS是一个跨平台的程序，旨在确保跨多个设备和操作系统的一致结果。这是通过以下方式实现的:\n                <ol>\n                    <li>\n                    操作都是平凡的。该应用程序使用一种简单的循环，不使用任何的分支、外部调用或复杂的数据结构等。有几个连续的标量运算（即加法和乘法），它们重复执行数百万次。\n                </li>\n                <li>\n                CIL指令计算。Arm和x86体系结构非常不同，对于相同的操作可以采用不同数量的指令。 不同的编译器也可以为相同的源代码（即使对于相同的体系结构）生成不同的机器代码。 xOPS是基于.NET并编译成CIL中间字节码（Common Intermediate Language）。 该字节码又被转换为机器代码。 xOPS中使用的每个操作测量单位是一个CIL指令。 因此，该应用程序测量处理器每单位时间能够执行的CIL指令数量，并不考虑到特定的机器指令。\n                </li>\n                <li>\n                禁用优化。对编译器配置形式排除主循环优化的可能性。 此外，循环中的代码以最明显的方式被编写：一行是对一个运算对象执行的一次运算。 这使系统能够用最明显的方式将字节码转换为机器代码。\n                </li>\n                <li>\n                试制、寻找运算的最佳组合、对其他基准结果进行比较。m.NET平台应有JIT（Just-in-Time）或AOT (Ahead-of-Time)编译器，以及一个中间运行环境。 具有不同版本的.NET（适用于Mac和Android的Mono，适用于Windows的.NET Framework）以及不同版本的JIT。 这些因素对结果差别的影响很大（不同的机器代码、指令级并行性、分支预测等）。为了确保结果具有显著性而可比较，寻找最佳组合和代码设置时，对在不同的设备和操作系统上的结果不断地进行了比较。\n                </li>\n                <li>\n                迅速。测试需要5到20秒（取决于设备性能），而其他测试套件则需要数分钟。\n                </li>\n                </ol>\n                </p>\n                <p>\n                考虑到上述措施，在同一台MacBook上运行的应用程序（在Windows Bootcamp，macOS和Android Emulator中）有5％的结果差别。 此外，xOPS的结果比另一个流行的跨平台基准的结果（基于15个设备的测量结果）具有95％相关。\n                </p>\n                <p>\n                该项目采用开源软件，以获得开放源代码，请访问：<a href=\"https://github.com/maxim-saplin/xOPS-App\">https://github.com/maxim-saplin/xOPS-App</a>\n                </p>\n            </div>\n        </>\n    )\n}","import React, { Component } from 'react'\nimport ReactSwipeEvents from 'react-swipe-events'\nimport l18n from './translations'\nimport PressableLink from './PressableLink'\nimport ListSelector from './ListSelector'\nimport Search from './Search'\nimport TestResults from './TestResults'\nimport Hint from './Hint'\nimport AboutEn from './AboutEn'\nimport AboutRu from './AboutRu'\nimport AboutFr from './AboutFr'\nimport AboutZh from './AboutZh'\nimport db from './data'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.platformClick = this.platformClick.bind(this);\n    this.testClick = this.testClick.bind(this);\n    this.searchChanged = this.searchChanged.bind(this);\n    this.resultSelected = this.resultSelected.bind(this);\n    this.selectedIdRemoved = this.selectedIdRemoved.bind(this);\n    this.toggleAbout = this.toggleAbout.bind(this);\n    this.swipe = this.swipe.bind(this);\n    this.wpf = \"wpf\";\n    this.android = \"android\";\n    this.macos = \"macos\";\n\n    this.urlParams = new URLSearchParams(window.location.search ? window.location.search : \"\");\n    \n    this.selectedIdsParam = \"selected\";\n    this.aboutParam = \"about\";\n    this.showDownloadParam = \"download\";\n    this.qParam = \"q\";\n    this.inappParam = \"inapp\";\n\n    let selectedResultIds = this.getSelectedIdsFromParam()\n    let inAppPlatform = this.urlParams.get(this.inappParam) ? this.urlParams.get(this.inappParam).toLocaleLowerCase() : null;\n    let selectedPlatforms = db.dictionaries.getPlatforms().map(p => p.key);\n    let q = this.urlParams.get(this.qParam) ? this.urlParams.get(this.qParam).toLocaleLowerCase() : null;\n\n    ({ selectedPlatforms, selectedResultIds } = this.inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds));\n\n    this.state = {\n      selectedTest: db.dictionaries.getTests()[0].key,\n      selectedResultIds: selectedResultIds,\n      inAppPlatform: inAppPlatform,\n      selectedPlatforms: selectedPlatforms,\n      device: q,\n      showAbout: this.urlParams.has(this.aboutParam),\n      showDownload: this.urlParams.has(this.showDownloadParam)\n    };\n\n    this.title = this.urlParams.get(\"ttl\") ? decodeURIComponent(this.urlParams.get(\"ttl\")) : null;\n\n    this.renderCounter = 0;\n  }\n\n  inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds) {\n    if (inAppPlatform) {\n      if (inAppPlatform === this.wpf) selectedPlatforms = [db.dictionaries.Windows];\n      else if (inAppPlatform === this.android) selectedPlatforms = [db.dictionaries.Android];\n      else if (inAppPlatform === this.macos) selectedPlatforms = [db.dictionaries.macOS];\n      let yourDevice = this.urlParams.get(\"yd\");\n      if (yourDevice) {\n        let yd = null;\n        try {\n          yd = JSON.parse(yourDevice);\n          if (yd) {\n            yd.platform = selectedPlatforms[0];\n            db.results.addYourDeviceResult(yd);\n          }\n          selectedResultIds = [db.results.yourDeviceId];\n        }\n        catch { }\n      }\n    }\n    return { selectedPlatforms, selectedResultIds };\n  }\n\n  getSelectedIdsFromParam(){\n    let param = this.urlParams.get(this.selectedIdsParam);\n    let ids = [];\n\n    if (param) {\n      let split = param.split(\",\");\n      \n      for (let i = 0; i < split.length; i++){\n        let id = parseInt(split[i]);\n        if (Number.isInteger(id) && db.results.idExists(id) && !ids.includes(id)){\n          ids.push(id);\n        }\n      }\n    }\n\n    return ids;\n  }\n\n  addSelectedIdsToParam(ids){\n    if (ids.length > 0){ \n      let param = \"\";\n\n      for (let i = 0; i < ids.length; i++) {\n        param += ids[i];\n        if (i !== ids.length-1) param+=\",\";\n      }\n\n      this.urlParams.set(this.selectedIdsParam, param);\n    }\n    else {\n      this.urlParams.delete(this.selectedIdsParam);\n    }\n    window.history.replaceState({},null,\"?\"+this.urlParams.toString());\n  }\n\n  testClick(key){\n    this.setState({selectedTest: key, swipeHint: true});\n  }\n\n  swipe(left){\n    let t = db.dictionaries.getTests();\n    let i = 0;\n\n    for (i; i < t.length; i++){\n      if (t[i].key === this.state.selectedTest) break;\n    }\n\n    if (left) i++; else i--;\n\n    if (i < 0) i = t.length-1;\n    else if (i >= t.length) i = 0;\n    \n    this.setState({selectedTest: t[i].key, swipeHint: true});\n  }\n\n  platformClick(key){\n    this.setState({selectedPlatforms: key});\n  }\n\n  searchChanged(val){\n    this.setState({device: val});\n  }\n\n  resultSelected(resultId, clearDevice){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds.push(resultId);\n    if (clearDevice) {\n      this.setState({device: \"\"});\n    }\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setSelectedIds(selectedResultIds) {\n    this.setState({ selectedResultIds: selectedResultIds });\n    this.addSelectedIdsToParam(selectedResultIds);\n  }\n\n  selectedIdRemoved(id){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds = selectedResultIds.filter(i => i !== id);\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setTitle(title){\n    document.title = title;\n  }\n\n  toggleAbout(){\n    let showAbout = !(this.state.showAbout || this.state.showDownload);\n\n    this.setState({showAbout: showAbout, showDownload: false});\n\n    if (showAbout) this.urlParams.set(this.aboutParam, \"\");\n    else {\n      this.urlParams.delete(this.aboutParam);\n      this.urlParams.delete(this.showDownloadParam);\n    }\n\n    window.history.replaceState({},null,\"?\"+this.urlParams.toString());\n  }\n\n  render() {\n    let stl = this.setTitle;\n\n    if (this.title){ // TestResults can change title, upon first load override title with the value from parm\n      stl(this.title);\n      this.title = null;\n      stl = null;\n    }\n    else {\n      if (this.state.showAbout) this.setTitle(l18n.aboutTitle);\n      else if (this.state.showDownload) this.setTitle(l18n.downloadTitle);\n      else this.setTitle(l18n.title);\n    }\n\n    this.renderCounter++;\n\n    let helpLinkClass = \"leftCorner\";\n    if (this.state.inAppPlatform) helpLinkClass +=\" inapp\";\n    if (this.renderCounter < 2 ) helpLinkClass +=\" textColorVibration\";\n\n    return (\n      !this.state.showAbout && !this.state.showDownload ?\n      <ReactSwipeEvents id=\"swipe\" onSwipedLeft={() => this.swipe(true)} onSwipedRight={() => this.swipe(false)} threshold={75}>\n        <>\n          <div className={this.state.inAppPlatform !== this.wpf ? \"pad\" : null}>\n            {!this.state.inAppPlatform && <h1>{l18n.title}: </h1>}\n            {!this.state.inAppPlatform && <h2>{l18n.subTitle}</h2>}\n            <PressableLink className={helpLinkClass} onClick={this.toggleAbout}>[?]</PressableLink>\n            \n            <ListSelector itemClick={this.platformClick} selectedKey={this.state.selectedPlatforms} \n              items={db.dictionaries.getPlatforms()} selectAll={true} />\n            <ListSelector itemClick={this.testClick} selectedKey={this.state.selectedTest} \n              items={db.dictionaries.getTests()} />\n            <Search searchChanged={this.searchChanged} enterPressed={this.resultSelected} value={this.state.device}/>\n            <br/>\n            <TestResults \n              selectedTest={this.state.selectedTest}\n              selectedPlatforms={this.state.selectedPlatforms}\n              selectedResultIds={this.state.selectedResultIds}\n              selectedIdRemoved={this.selectedIdRemoved}\n              resultSelected={this.resultSelected}\n              device={this.state.device}\n              setTitle={stl}\n            />        \n          </div>\n          {'ontouchstart' in window && this.state.swipeHint && <Hint>{l18n.hintSwipe}</Hint>}\n        </>\n      </ReactSwipeEvents>\n      : l18n.locale === l18n.ruLocale \n        ? <AboutRu toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n        : (l18n.locale === l18n.frLocale \n          ? <AboutFr toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n            : (l18n.locale === l18n.zhLocale \n              ? <AboutZh toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n              : <AboutEn toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/>\n            )));\n  }\n}\n\nexport default App;","import 'babel-polyfill';\nimport 'url-search-params-polyfill';\nimport 'whatwg-fetch'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index_dark.css';\nimport App from './App';\nimport l18n from './translations';\nimport db from './data';\n\n\nlet themeParam = null;\n\ninitParams(); \nstart();\n\nfunction start(){\n  l18n.init();\n  document.title = l18n.pageTitle;\n  if (themeParam !== \"white\") document.body.className=\"dark\";\n\n  // db.initFake();\n  // ReactDOM.render(<App />, document.getElementById('root'));\n\n  db.init().then(() => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n  });\n}\n\nfunction initParams(){\n  const urlParams = new URLSearchParams(window.location.search);\n  themeParam = urlParams.get(\"theme\");\n}"],"sourceRoot":""}