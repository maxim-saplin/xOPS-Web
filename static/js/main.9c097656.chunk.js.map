{"version":3,"sources":["img/windows.svg","img/macos.svg","img/google-play.svg","img/apk.svg","img/github.svg","img/linux.svg","translations/ru.js","translations/fr.js","translations/index.js","translations/en.js","PressableLink.js","ListSelector.js","data/dictionaries.js","data/results.js","data/db.js","data/index.js","Search.js","TestResultDetailsItem.js","TestResultDetails.js","TestResult.js","Hint.js","TestResults.js","DownloadLinks.js","AboutEn.js","AboutRu.js","AboutFr.js","App.js","index.js"],"names":["module","exports","translations","pageTitle","aboutTitle","downloadTitle","title","subTitle","ST_FLT","MT_FLT","ST_INT","MT_INT","ST_FLT_s","MT_FLT_s","ST_INT_s","MT_INT_s","ST_FLT_f","MT_FLT_f","ST_INT_f","MT_INT_f","performance","nothingToShow","Android","macOS","Windows","all","gflops","ginops","hitEnter","hintDoubleTap","hintSwipe","close","yourDevice","result_FSM","result_ISM","result_FS","result_FM","result_IS","result_IM","param","URLSearchParams","window","location","search","get","localeObj","lang","this","enLocale","locale","toLocaleLowerCase","navigator","language","toLowerCase","includes","ruLocale","ru","frLocale","fr","Object","keys","forEach","key","shortcutRegex","PressableLink","Component","constructor","props","super","onKeyPress","bind","initShortcut","shortcut","children","match","length","keyPressSubscribed","document","addEventListener","removeEventListener","e","activeElement","HTMLBodyElement","onClick","componentWillUnmount","render","className","ListSelector","toggle","selectAll","selectedKey","filter","k","push","items","map","p","shortcuts","has","val","Array","isArray","i","itemClick","initShortcuts","prevItems","Map","sc","arr","set","size","updateShortcuts","name","l18n","platforms","tests","addShortcut","obj","dictionaries","getTests","mod","data","getPlatforms","console","log","results","addYourDeviceResult","yd","device","id","yourDeviceId","deviceDetail","pop","getResults","platfroms","test","excludeIds","filters","r","hidden","platform","trim","result","condition","sort","a","b","lastResultId","getResultById","idExists","setPercents","maxVal","percent","getLastResultId","db","init","fetchVersion","Promise","resolve","fetch","cache","then","response","json","storage","setItem","v","version","fetchDb","JSON","stringify","promise","localStorage","getItem","parse","localDbVersion","initFake","Search","PureComponent","textChanged","moveCursorToEnd","state","extraSpaces","value","blink","showHitn","textInput","React","createRef","enterPressed","target","innerText","searchChanged","setState","charCode","last","el","createRange","setTimeout","selection","getSelection","range","setStart","childNodes","collapse","removeAllRanges","addRange","componentDidUpdate","current","contentEditable","ref","onInput","onFocus","nativeEvent","onBlur","focus","TestResultDetailsItem","selectedTest","testName","unit","TestResultDetails","item","noHighlight","TestResult","itemProp","deviceYear","style","width","closableX","selectedIdRemoved","closableEsc","Hint","TestResults","onKeyUp","handleSingleDblClicks","expandedId","doubleTapHint","clickTimeout","getAllResults","text","singleClick","dblClick","preventDefault","clearTimeout","keyCode","deletableId","keyboardEventsSubscription","selectedPlatforms","selectedResultIds","selectedCount","selectedResults","concat","setTitle","itemScope","empty","resultSelected","DownloadLinks","href","src","windows","google_play","apk","github","opacity","linux","About","inApp","linkClass","toggleAbout","class","download","App","platformClick","testClick","swipe","wpf","android","macos","urlParams","selectedIdsParam","aboutParam","showDownloadParam","qParam","inappParam","getSelectedIdsFromParam","inAppPlatform","q","inAppAdjustments","showAbout","showDownload","decodeURIComponent","renderCounter","ids","split","parseInt","Number","isInteger","addSelectedIdsToParam","delete","history","replaceState","toString","swipeHint","left","t","resultId","clearDevice","setSelectedIds","stl","helpLinkClass","onSwipedLeft","onSwipedRight","threshold","themeParam","initParams","body","ReactDOM","getElementById","start"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,uNCI5BC,MAHf,GCGeA,MAHf,GCGA,MAGMA,ECNN,CACIC,UAAW,2CACXC,WAAa,gCACbC,cAAgB,+BAChBC,MAAO,qBACPC,SAAU,oBACVC,OAAQ,6BACRC,OAAQ,4BACRC,OAAQ,4BACRC,OAAQ,2BAERC,SAAU,YACVC,SAAU,YACVC,SAAU,YACVC,SAAU,YAEVC,SAAU,2BACVC,SAAU,0BACVC,SAAU,0BACVC,SAAU,yBAEVC,YAAa,cACbC,cAAe,kBAEfC,QAAS,YACTC,MAAO,UACPC,QAAS,YACTC,IAAK,MACLC,OAAQ,SACRC,OAAQ,SAERC,SAAU,6BACVC,cAAe,sCACfC,UAAW,qCACXC,MAAO,UACPC,WAAY,cAEZC,WAAY,aACZC,WAAY,aAEZC,UAAW,QACXC,UAAW,QACXC,UAAW,QACXC,UAAW,QDlCfpC,KAAoB,WAChB,MACMqC,EADY,IAAIC,gBAAgBC,OAAOC,SAASC,QAC9BC,IARV,QAUd,IAUIC,EAVAC,EAAOC,KAAKC,SAChBD,KAAKE,OAASH,EAGVA,EADAP,EACOA,EAAMW,oBAGNC,UAAUC,SAASC,cAK1BP,EAAKQ,SAASP,KAAKQ,WACnBV,EAAYW,EACZT,KAAKE,OAASF,KAAKQ,UAEdT,EAAKQ,SAASP,KAAKU,YACxBZ,EAAYa,EACZX,KAAKE,OAASF,KAAKU,UAGnBZ,GACAc,OAAOC,KAAK1D,GAAc2D,QAASC,IAC3BjB,EAAUiB,KACV5D,EAAa4D,GAAOjB,EAAUiB,OAI9C5D,SAAwB,KACxBA,SAAwB,KACxBA,SAAwB,MAETA,QE5Cf,MAAM6D,EAAgB,eAEtB,MAAMC,UAAsBC,YAC1BC,YAAYC,GAOV,GANAC,MAAMD,GAENpB,KAAKsB,WAAatB,KAAKsB,WAAWC,KAAKvB,MACvCA,KAAKwB,aAAexB,KAAKwB,aAAaD,KAAKvB,MAE3CA,KAAKyB,SAAW,KACZzB,KAAKoB,MAAMM,SAAS,CACtB,IAAIC,EAAQ3B,KAAKoB,MAAMM,SAASC,MAAMX,GAClCW,GAA0B,IAAjBA,EAAMC,SACjB5B,KAAKyB,SAAWE,EAAM,GAAGrB,gBAI/BkB,eACMxB,KAAKyB,WAAazB,KAAK6B,oBACzBC,SAASC,iBAAiB,WAAY/B,KAAKsB,YAC3CtB,KAAK6B,oBAAqB,GAEnB7B,KAAK6B,qBACZC,SAASE,oBAAoB,WAAYhC,KAAKsB,YAC9CtB,KAAK6B,oBAAqB,GAI9BP,WAAWW,GACLH,SAASI,yBAAyBC,iBAChCnC,KAAKyB,WAAaQ,EAAElB,KAAOf,KAAKoB,MAAMgB,SAExCpC,KAAKoB,MAAMgB,UAKjBC,uBACMrC,KAAK6B,oBACPC,SAASE,oBAAoB,WAAYhC,KAAKsB,YAGlDgB,SAEE,OADAtC,KAAKwB,eACE,uBAAGe,UAAWvC,KAAKoB,MAAMmB,UAAWH,QAASpC,KAAKoB,MAAMgB,SAAUpC,KAAKoB,MAAMM,WAKzET,QChDf,MAAMuB,UAAqBtB,YACzBC,YAAYC,GACVC,MAAMD,GAENpB,KAAKyC,OAASzC,KAAKyC,OAAOlB,KAAKvB,MAC/BA,KAAK0C,UAAY1C,KAAK0C,UAAUnB,KAAKvB,MACrCA,KAAKsB,WAAatB,KAAKsB,WAAWC,KAAKvB,MAGzCyC,OAAO1B,GACL,OAAIf,KAAKoB,MAAMuB,YAAYpC,SAASQ,GAC9Bf,KAAKoB,MAAMuB,YAAYf,OAAS,EAC3B5B,KAAKoB,MAAMuB,YAAYC,OAAOC,GAAKA,IAAM9B,GAGzCf,KAAKoB,MAAMuB,aAItB3C,KAAKoB,MAAMuB,YAAYG,KAAK/B,GAErBf,KAAKoB,MAAMuB,aAGpBD,YACE,OAAO1C,KAAKoB,MAAM2B,MAAMC,IAAIC,GAAKA,EAAElC,KAGrCO,WAAWW,GACT,GAAIH,SAASI,yBAAyBC,iBAChCnC,KAAKkD,UAAUC,IAAIlB,EAAElB,KACzB,CACE,IAAIqC,EAAMpD,KAAKkD,UAAUrD,IAAIoC,EAAElB,KAG/B,GAAIsC,MAAMC,QAAQF,GAAK,CACrB,IAAIrC,EAAMqC,EAAI,GAAGrC,IAEjB,IAAK,IAAIwC,EAAI,EAAGA,EAAIH,EAAIxB,OAAQ2B,IAC1BH,EAAIG,GAAGxC,MAAQf,KAAKoB,MAAMuB,aACxBY,EAAE,EAAIH,EAAIxB,SAAQb,EAAMqC,EAAIG,EAAE,GAAGxC,KAIzCf,KAAKoB,MAAMoC,UAAUzC,QAEdsC,MAAMC,QAAQtD,KAAKoB,MAAMuB,aAChC3C,KAAKoB,MAAMoC,UAAUxD,KAAKyC,OAAOW,EAAIrC,MAC5BqC,EAAIrC,MAAQf,KAAKoB,MAAMuB,aAChC3C,KAAKoB,MAAMoC,UAAUJ,EAAIrC,MAMjCsB,uBACMrC,KAAK6B,oBACPC,SAASE,oBAAoB,WAAYhC,KAAKsB,YAGlDmC,gBAGE,IAAK,IAAIF,KAFTvD,KAAK0D,UAAY1D,KAAKoB,MAAM2B,MAC5B/C,KAAKkD,UAAY,IAAIS,IACP3D,KAAK0D,UACjB,GAAI1D,KAAK0D,UAAUH,GAAG9B,SACpB,GAAKzB,KAAKkD,UAAUC,IAAInD,KAAK0D,UAAUH,GAAG9B,UAErC,CACH,IAAImC,EAAK5D,KAAKkD,UAAUrD,IAAIG,KAAK0D,UAAUH,GAAG9B,UAE9C,GAAI4B,MAAMC,QAAQM,GAAKA,EAAGd,KAAK9C,KAAK0D,UAAUH,QACzC,CACH,IAAIM,EAAM,CAACD,EAAI5D,KAAK0D,UAAUH,IAC9BvD,KAAKkD,UAAUY,IAAI9D,KAAK0D,UAAUH,GAAG9B,SAAUoC,SAPjD7D,KAAKkD,UAAUY,IAAI9D,KAAK0D,UAAUH,GAAG9B,SAAUzB,KAAK0D,UAAUH,IAYhEvD,KAAKkD,UAAUa,KAAO,GACxBjC,SAASC,iBAAiB,WAAY/B,KAAKsB,YAC3CtB,KAAK6B,oBAAqB,GAEnB7B,KAAK6B,qBACZC,SAASE,oBAAoB,WAAYhC,KAAKsB,YAC9CtB,KAAK6B,oBAAqB,GAI9BmC,kBACOhE,KAAK0D,UAGD1D,KAAK0D,YAAc1D,KAAKoB,MAAM2B,OACrC/C,KAAKyD,gBAHLzD,KAAKyD,gBAOTnB,SAGE,OAFAtC,KAAKgE,kBAEDhE,KAAKoB,MAAM2B,MAEX,wBAAIR,UAAWvC,KAAKoB,MAAMmB,WAEpBvC,KAAKoB,MAAM2B,MAAMC,IACfO,GACE,wBACExC,IAAKwC,EAAExC,IACPwB,UAAWvC,KAAKoB,MAAMuB,YAAYpC,SAASgD,EAAExC,KAAO,WAAa,KACjEqB,QACEiB,MAAMC,QAAQtD,KAAKoB,MAAMuB,aACzB,IAAM3C,KAAKoB,MAAMoC,UAAUxD,KAAKyC,OAAOc,EAAExC,MACzC,IAAMf,KAAKoB,MAAMoC,UAAUD,EAAExC,MAG9BwC,EAAEU,OAMXjE,KAAKoB,MAAMsB,WAAa,wBAAIN,QAAS,IAAMpC,KAAKoB,MAAMoC,UAAUxD,KAAK0C,cAAewB,EAAKxF,MAKxF,MAME8D,QCrIf,IAAI2B,EAAWC,EACf,MAAMpD,EAAgB,eAEtB,SAASqD,EAAYC,GACnB,IAAI3C,EAAQ2C,EAAIL,KAAKtC,MAAMX,GACvBW,GAA0B,IAAjBA,EAAMC,SACjB0C,EAAI7C,SAAWE,EAAM,GAAGrB,eA2B5B,MAAMiE,EACN,CACEC,SAAW,WAdb,IAAgCzB,EAAO0B,EAgBnC,OADKL,IAfuBrB,EAee/C,KAAK0E,KAAKN,MAflBK,EAewB,KAA/CL,EAdPrB,EAAMC,IAAIO,IACb,IAAIe,EAAM,CACRvD,IAAKwC,EACLU,KAAMC,EAAKX,EAAEkB,GAAOP,EAAKX,EAAEkB,GAAOlB,EAClC9B,SAAU,MAGZ,OADA4C,EAAYC,GACLA,KAQFF,GAGTO,aAAe,WACX,IAAKR,EAAU,CAhCApB,EAiCW/C,KAAK0E,KAAKP,UAAlCA,EAhCCpB,EAAMC,IAAIO,IACb,IAAIe,EAAM,CACRvD,IAAKwC,EACLU,KAAMC,EAAKX,GAAKW,EAAKX,GAAKA,EAC1B9B,SAAU,MAGZ,OADA4C,EAAYC,GACLA,IA2BL,IAAIzD,EAAOsD,EAAUnB,IAAIC,GAAKA,EAAElC,KAEZ,IAAhBF,EAAKe,QAAcgD,QAAQC,IAAI,yDAAyDhE,EAAKe,QAC5Ff,EAAKN,SAASP,KAAKvB,UAAUmG,QAAQC,IAAI,oCACzChE,EAAKN,SAASP,KAAKzB,UAAUqG,QAAQC,IAAI,oCACzChE,EAAKN,SAASP,KAAKxB,QAAQoG,QAAQC,IAAI,kCAxCpD,IAAqB9B,EA0Cf,OAAOoB,GAIbI,OAAsB,SACtBA,OAAsB,SACtBA,OAAsB,SACtBA,OAAsB,SAEtBA,QAAuB,UACvBA,QAAuB,UACvBA,MAAqB,SAENA,QChEf,MAAMO,EACN,CACEC,oBAAqB,SAASC,GAMvBA,EAAGC,SAAQD,EAAGC,OAASf,EAAKjF,YAEjC+F,EAAGE,GAAKlF,KAAKmF,aACbH,EAAGI,aAAe,GAEdpF,KAAK0E,KAAKI,QAAQ9E,KAAK0E,KAAKI,QAAQlD,OAAO,GAAGsD,KAAOF,EAAGE,IAAIlF,KAAK0E,KAAKI,QAAQO,MAClFrF,KAAK0E,KAAKI,QAAQhC,KAAKkC,IAGzBM,WAAY,SAASC,EAAWC,EAAMP,EAAQQ,GAC5C,IAAIC,EAAU,GAEdA,EAAQ5C,KAAK6C,IAAMA,EAAEC,QAEjBL,GAAalC,MAAMC,QAAQiC,IAC7BG,EAAQ5C,KAAK6C,GAAKJ,EAAUhF,SAASoF,EAAEE,WAGrCZ,IACFA,EAASA,EAAOa,OAAOxF,iBAEjB2E,EAAOrD,OAAS,EAClB8D,EAAQ5C,KAAK6C,GAAKA,EAAEV,OAAO3E,cAAcC,SAAS0E,IAElDS,EAAQ5C,KAAK6C,GAAKA,EAAEV,OAAO3E,cAAcC,SAAS0E,IAAWU,EAAEP,aAAa9E,cAAcC,SAAS0E,KAIrGQ,GAAcA,EAAW7D,OAAS,GACpC8D,EAAQ5C,KAAK6C,IAAMF,EAAWlF,SAASoF,EAAET,KAG3C,IAAIa,EAAS/F,KAAK0E,KAAKI,QAAQlC,OAAO+C,IAElC,IAAIK,GAAY,EAChB,IAAK,IAAIzC,EAAI,EAAGA,EAAImC,EAAQ9D,OAAQ2B,IAElC,GADAyC,GAAaN,EAAQnC,GAAGoC,IACnBK,EAAW,OAAO,EAGzB,OAAO,IAYX,OATIR,GACFO,EAAOE,KACL,CAACC,EAAEC,IACDA,EAAEX,GAAQU,EAAEV,IAIdO,EAAOnE,OAAS,EAAG5B,KAAKoG,aAAeL,EAAO,GAAGb,GAASlF,KAAKoG,aAAe,KAE3EL,GAGTM,cAAe,SAASnB,GACtB,OAAIA,EAAK,GAAKA,EAAKlF,KAAK0E,KAAKI,QAAQlD,OAAe,KACzC,IAAPsD,GAAiE,IAArDlF,KAAK0E,KAAKI,QAAQ9E,KAAK0E,KAAKI,QAAQlD,OAAO,GAAGsD,GAAiBlF,KAAK0E,KAAKI,QAAQ9E,KAAK0E,KAAKI,QAAQlD,OAAO,GAEnH5B,KAAK0E,KAAKI,QAAQI,EAAG,IAG9BoB,SAAU,SAASpB,GACjB,OAAiC,MAA1BlF,KAAKqG,cAAcnB,IAG5BqB,YAAa,SAASzB,EAASU,GAC7B,IAAIgB,EAAS,EACb,IAAK,IAAIjD,EAAI,EAAGA,EAAIuB,EAAQlD,OAAQ2B,IAC9BuB,EAAQvB,GAAGiC,GAAQgB,IAAQA,EAAS1B,EAAQvB,GAAGiC,IAErD,IAAK,IAAIjC,EAAI,EAAGA,EAAIuB,EAAQlD,OAAQ2B,IAClCuB,EAAQvB,GAAGkD,QAAU3B,EAAQvB,GAAGiC,GAAMgB,GAI1CE,gBAAiB,WACf,OAAI1G,KAAKoG,aAAqBpG,KAAKoG,aAC5B,MAIXtB,aAAuB,KACvBA,aAAuB,GAERA,QCbA6B,IChFAA,EDMJ,CACPpC,aAAeA,EACfO,QAAUA,EAEV8B,KAAM,WACF,IAAIC,EAAe,IACR,IAAIC,QAASC,IAChBC,MAZO,sFAYe,CAACC,MAAO,aAC7BC,KAAKC,GACKA,EAASC,QAEnBF,KAAKnB,IACFsB,EAAQC,QAfG,kBAe6BvB,EAAOwB,GAC/CvH,KAAKwH,QAAUzB,EAAOwB,EACtBR,EAAQhB,EAAOwB,OAKvBE,EAAU,IACH,IAAIX,QAASC,IAChBC,MAzBH,8EAyBiB,CAACC,MAAO,aACrBC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKnB,IACFsB,EAAQC,QA1BL,UA0B6BI,KAAKC,UAAU5B,IAC/CxB,EAAaG,KAAOqB,EACpBjB,EAAQJ,KAAOqB,EACfgB,EAAQhB,OAKhB6B,EAAU,KAEVP,EAAU3H,OAAOmI,aAEjBnD,EAAO2C,EAAQS,QAtCJ,WAuCf,GAAIpD,EAAM,CACR,IAAMA,EAAOgD,KAAKK,MAAMrD,GAAQ,UAC3BA,EAAKI,UAASJ,EAAO,MAE5B,IAAIsD,EAAiBX,EAAQS,QA5CN,mBAoEvB,OAtBIpD,EACAkD,EAAU,IAAId,QAASC,IACnBF,IACCK,KAAKnB,IAEEA,IAAWiC,EACXP,IAAUP,KAAKnB,GAAUgB,EAAQhB,KAIjCxB,EAAaG,KAAOA,EACpBI,EAAQJ,KAAOA,EACfqC,EAAQrC,SAMpBmC,IACAe,EAAUH,KAGPG,GAGXK,SAAU,WACR1D,EAAaG,KAAO,CAAC,QAAU,CAAC,CAAC,GAAK,EAAE,OAAS,iBAAiB,SAAW,UAAU,aAAe,iBAAiB,cAAgB,GAAG,WAAa,KAAK,OAAS,IAAI,OAAS,EAAE,OAAS,IAAI,OAAS,KAAK,OAAS,IAAI,CAAC,GAAK,EAAE,OAAS,wBAAyB,SAAW,QAAQ,aAAe,gBAAgB,cAAgB,GAAG,WAAa,KAAK,OAAS,IAAI,OAAS,KAAK,OAAS,IAAI,OAAS,KAAK,OAAS,IAAI,CAAC,GAAK,EAAE,OAAS,wBAAyB,SAAW,UAAU,aAAe,0BAA0B,cAAgB,GAAG,WAAa,KAAK,OAAS,IAAI,OAAS,KAAK,OAAS,IAAI,OAAS,KAAK,OAAS,IAAI,CAAC,GAAK,EAAE,OAAS,iBAAiB,SAAW,UAAU,aAAe,iBAAiB,cAAgB,GAAG,WAAa,KAAK,OAAS,IAAI,OAAS,KAAK,OAAS,EAAE,OAAS,KAAK,OAAS,IAAI,CAAC,GAAK,EAAE,OAAS,6BAA6B,SAAW,UAAU,aAAe,gBAAgB,cAAgB,GAAG,WAAa,KAAK,OAAS,IAAI,OAAS,IAAI,OAAS,IAAI,OAAS,KAAK,OAAS,KAAK,UAAY,CAAC,UAAW,QAAS,WAAW,MAAQ,CAAC,SAAU,SAAU,SAAU,WAC1kCI,EAAQJ,KAAOH,EAAaG,OE1ElC,MAAMwD,UAAeC,gBACnBhH,YAAYC,GACVC,MAAMD,GAENpB,KAAKoI,YAAcpI,KAAKoI,YAAY7G,KAAKvB,MACzCA,KAAKsB,WAAatB,KAAKsB,WAAWC,KAAKvB,MACvCA,KAAKqI,gBAAkBrI,KAAKqI,gBAAgB9G,KAAKvB,MAEjDA,KAAKsI,MAAQ,CACXC,aAAanH,EAAMoH,MACnBC,OAAO,EACPC,UAAU,GAGZ1I,KAAK2I,UAAYC,IAAMC,YAGzBT,YAAYnG,GACNjC,KAAK8I,eACP7G,EAAE8G,OAAOC,UAAY,GACrBhJ,KAAK8I,cAAe,GAGlB9I,KAAKoB,MAAM6H,eACbjJ,KAAKoB,MAAM6H,cAAchH,EAAE8G,OAAOC,WAAW,GAE3C/G,EAAE8G,OAAOC,WAAahJ,KAAKsI,MAAMC,YAAavI,KAAKkJ,SAAS,CAACX,aAAa,IACpEtG,EAAE8G,OAAOC,WAAchJ,KAAKsI,MAAMC,aAAavI,KAAKkJ,SAAS,CAACX,aAAa,IAGvFjH,WAAWW,GACT,GAAc,UAAVA,EAAElB,KAAkC,KAAfkB,EAAEkH,SAAiB,CAC1CnJ,KAAK8I,cAAe,EACpB,IAAIM,EAAOzC,EAAG7B,QAAQ4B,kBAClBzE,EAAE8G,OAAOC,WAAahJ,KAAKoB,MAAM0H,cAAgBM,GAAMpJ,KAAKoB,MAAM0H,aAAaM,QAEhFpJ,KAAK8I,cAAe,EAG3BT,gBAAgBgB,GACXA,EAAGL,WAAalH,SAASwH,aAE1B5J,OAAO6J,WAAW,KAEd,IAAIC,EAAY1H,SAAS2H,eACrBC,EAAQ5H,SAASwH,cAErBI,EAAMC,SAASN,EAAGO,WAAW,GAAGP,EAAGL,UAAUpH,QAC7C8H,EAAMG,UAAS,GACfL,EAAUM,kBACVN,EAAUO,SAASL,IAEtB,GAILM,qBACMlI,SAASI,gBAAkBlC,KAAK2I,UAAUsB,SAC5CjK,KAAKqI,gBAAgBrI,KAAK2I,UAAUsB,SAGxC3H,SACE,OACE,oCACE,0BAAMC,UAAU,aACd,0BACE2H,gBAAgB,OAChBC,IAAKnK,KAAK2I,UACVyB,QAASpK,KAAKoI,YACd9G,WAAYtB,KAAKsB,WACjB+I,QAAUpI,IAAOjC,KAAKkJ,SAAS,CAACT,OAAM,IAAQzI,KAAKqI,gBAAgBpG,EAAEqI,YAAYvB,SACjFwB,OAAQ,KAAOvK,KAAKkJ,SAAS,CAACT,OAAM,MAErCzI,KAAKoB,MAAMoH,OAEZ,0BACEjG,UAAWvC,KAAKsI,MAAMG,MAAQ,QAAU,GACxCrG,QAAS,KAAOpC,KAAK2I,UAAUsB,QAAQO,WAErCxK,KAAKsI,MAAMG,OAASzI,KAAKsI,MAAMC,aAAe,mBAJlD,KAXF,MAmBA,0BAAMhG,WAAYvC,KAAKsI,MAAMC,aAAevI,KAAKsI,MAAMG,MAAQ,wBAA0B,iBACtFvE,EAAKrF,YAODqJ,QC7Ff,MAAMuC,UAA8BtC,gBAClC7F,SACE,OACA,oCACE,0BAAMC,UAAWvC,KAAKoB,MAAMsJ,eAAiB1K,KAAKoB,MAAMoE,KAAM,qBAAuB,aACrF,0BAAMjD,UAAU,OAAOvC,KAAKoB,MAAMuJ,UAClC,6BACA,0BAAMpI,UAAU,OAAOvC,KAAKoB,MAAM2E,QAClC,wBAAIxD,UAAU,cACd,0BAAMA,UAAU,QAAQvC,KAAKoB,MAAMwJ,SAM1BH,QCZf,MAAMI,UAA0B1C,gBAC9B7F,SACE,IAAIiB,EAAIvD,KAAKoB,MAAM0J,KAEnB,OAAIvH,EACF,0BAAMhB,UAAWvC,KAAKoB,MAAM2J,YAAc,2BAA6B,gBAErE,kBAAC,EAAD,CACEL,aAAc1K,KAAKoB,MAAMsJ,aACzBlF,KAAMmB,EAAGpC,aAAa9G,OACtBkN,SAAUzG,EAAK9E,UACfwL,KAAM1G,EAAKvF,OACXoH,OAAQxC,EAAEoD,EAAGpC,aAAa9G,UAG5B,kBAAC,EAAD,CACEiN,aAAc1K,KAAKoB,MAAMsJ,aACzBlF,KAAMmB,EAAGpC,aAAa7G,OACtBiN,SAAUzG,EAAK7E,UACfuL,KAAM1G,EAAKvF,OACXoH,OAAQxC,EAAEoD,EAAGpC,aAAa7G,UAG5B,kBAAC,EAAD,CACEgN,aAAc1K,KAAKoB,MAAMsJ,aACzBlF,KAAMmB,EAAGpC,aAAa5G,OACtBgN,SAAUzG,EAAK5E,UACfsL,KAAM1G,EAAKtF,OACXmH,OAAQxC,EAAEoD,EAAGpC,aAAa5G,UAG5B,kBAAC,EAAD,CACE+M,aAAc1K,KAAKoB,MAAMsJ,aACzBlF,KAAMmB,EAAGpC,aAAa3G,OACtB+M,SAAUzG,EAAK3E,UACfqL,KAAM1G,EAAKtF,OACXmH,OAAQxC,EAAEoD,EAAGpC,aAAa3G,WAKvB,MAIEiN,QC/Cf,MAAMG,UAAmB7C,gBACvB7F,SACE,IAAIiB,EAAIvD,KAAKoB,MAAM0J,KAEnB,OAAIvH,EACF,oCACE,0BAAMhB,UAAU,cACd,wBAAI0I,SAAS,QACV1H,EAAE0B,QAEL,6BACA,0BAAM1C,UAAU,SAAS0I,SAAS,eAC/B1H,EAAE2H,WAAY3H,EAAE6B,cAAgB,IADnC,IACyC7B,EAAE6B,eAG7C,0BAAM7C,UAAU,eACd,0BAAM4I,MAAO,CAAEC,MAAmB,GAAZ7H,EAAEkD,QAAe,KAAOwE,SAAS,cACpD1H,EAAEvD,KAAKoB,MAAMsJ,cADhB,IACgC1K,KAAKoB,MAAMsJ,aAAanK,SAAS,OAAS2D,EAAKvF,OAASuF,EAAKtF,QAE5FoB,KAAKoB,MAAMiK,WAAa,4BAAQjJ,QAAS,IAAMpC,KAAKoB,MAAMkK,kBAAkB/H,EAAE2B,KAAtD,KACxBlF,KAAKoB,MAAMmK,aAAe,4BAAQnJ,QAAS,IAAMpC,KAAKoB,MAAMkK,kBAAkB/H,EAAE2B,KAAtD,WAI1B,MAII8F,QC7Bf,MAAMQ,UAAarD,gBACjB7F,SACE,OAAO,0BAAMC,UAAU,QAAQvC,KAAKoB,MAAMM,WAI/B8J,QCDf,MAAMC,UAAoBvK,YACxBC,YAAYC,GACVC,MAAMD,GAENpB,KAAK0L,QAAU1L,KAAK0L,QAAQnK,KAAKvB,MACjCA,KAAK2L,sBAAwB3L,KAAK2L,sBAAsBpK,KAAKvB,MAC7DA,KAAKsI,MAAQ,CAACsD,WAAY,KAAMC,eAAe,GAC/C7L,KAAK8L,aAAe,KAGtBC,cAAchG,GACZ,IAAIiG,EAAO9H,EAAK7F,YAAc,KAC1B+F,EAAQuC,EAAGpC,aAAaC,WAE5B,IAAK,IAAIjB,EAAI,EAAGA,EAAIa,EAAMxC,OAAQ2B,IAChCyI,GAAQ9H,EAAKE,EAAMb,GAAGxC,IAAM,MAAQ,KAAOgF,EAAO3B,EAAMb,GAAGxC,KAAO,IAClEiL,GAAQ5H,EAAMb,GAAGxC,IAAIR,SAAS,OAAS2D,EAAKvF,OAASuF,EAAKtF,OACtD2E,IAAMa,EAAMxC,OAAS,IAAGoK,GAAQ,MAGtC,OAAOA,EAGT3J,uBACMrC,KAAK6B,oBACPC,SAASE,oBAAoB,QAAShC,KAAK0L,SAI/CC,sBAAsB1J,EAAGgK,EAAaC,GACpCjK,EAAEkK,iBACwB,OAAtBnM,KAAK8L,cACPlH,QAAQC,IAAI,OACZuH,aAAapM,KAAK8L,cAClB9L,KAAK8L,aAAe,KAChBI,GAAUA,MAGdtH,QAAQC,IAAI,QACRoH,GAAaA,IACjBjM,KAAK8L,aAAevC,WAClB,KACM6C,aAAapM,KAAK8L,cAClB9L,KAAK8L,aAAe,MAE1B,MAINJ,QAAQzJ,GACS,WAAVA,EAAElB,KAAkC,KAAdkB,EAAEoK,UAAmBrM,KAAKsM,aACnDtM,KAAKoB,MAAMkK,kBAAkBtL,KAAKsM,aAItCC,8BACOvM,KAAKsM,aAAetM,KAAK6B,oBAC5BC,SAASE,oBAAoB,QAAShC,KAAK0L,SAC3C1L,KAAK6B,oBAAqB,GAEnB7B,KAAKsM,cAAgBtM,KAAK6B,qBACjCC,SAASC,iBAAiB,QAAS/B,KAAK0L,SACxC1L,KAAK6B,oBAAqB,GAI9BS,SACE,IAAIS,EAAQ4D,EAAG7B,QAAQQ,WAAWtF,KAAKoB,MAAMoL,kBAAmBxM,KAAKoB,MAAMsJ,aAAc1K,KAAKoB,MAAM6D,OAAQjF,KAAKoB,MAAMqL,mBACnHC,GAAiB,EACrB1M,KAAKsM,YAAc,KACnB,IAAI/O,EAAQ,GAERkP,EAAoBzM,KAAKoB,MAAMqL,kBAC/Bb,EAAa5L,KAAKsI,MAAMsD,WAE5B,GAAIa,GAAqBA,EAAkB7K,OAAS,EAAE,CACpD,IAAI+K,EAAkBF,EAAkBzJ,IAAIkC,GAAMyB,EAAG7B,QAAQuB,cAAcnB,IAC3EnC,EAAQ4J,EAAgBC,OAAO7J,GAC/B2J,EAAgBC,EAAgB/K,OAChC5B,KAAKsM,YAAcK,EAAgBD,EAAc,GAAGxH,GAEpD,IAAK,IAAI3B,EAAI,EAAIA,EAAI,GAAOA,EAAIoJ,EAAgB/K,OAAS2B,IACvDhG,GAASoP,EAAgBpJ,GAAG0B,OAClB,IAAN1B,GAAWA,IAAMoJ,EAAgB/K,OAAO,EAAGrE,GAAQ,MAAYA,GAAQ,KAQ/E,OAJIyC,KAAKoB,MAAMyL,UAAU7M,KAAKoB,MAAMyL,SAAStP,EAAQ2G,EAAK9G,WAE1D4C,KAAKuM,6BAEDxJ,GAASA,EAAMnB,OAAS,GAC1B+E,EAAG7B,QAAQyB,YAAYxD,EAAO/C,KAAKoB,MAAMsJ,cAEvC,oCACC1K,KAAKsI,MAAMuD,eAAiB,kBAAC,EAAD,KAAO3H,EAAKpF,eACxCiE,EAAMC,IAAIO,GACT,yBACEuJ,WAAS,EACT/L,IAAKwC,EAAE2B,GACP3C,UAAWmK,KAAkB,EAAI,gBAAmBd,IAAerI,EAAE2B,GAAM,iBAAmB,OAC9FA,GAAsB,IAAlBwH,EAAsB,OAAS,KACnCnP,MAAOyC,KAAK+L,cAAcxI,GAC1BnB,QACGH,IAECjC,KAAK2L,sBACH1J,EAEEwK,GAAkD,IAA7BA,EAAkB7K,QAAiB6K,EAAkBlM,SAASgD,EAAE2B,IAKrF,KAJF,KACElF,KAAKkJ,SAAS,CAAC0C,WAAYA,IAAerI,EAAE2B,GAAK,KAAO3B,EAAE2B,KACrDlF,KAAKsI,MAAMuD,eAAe7L,KAAKkJ,SAAS,CAAC2C,eAAc,KAI5DY,GAAkD,IAA7BA,EAAkB7K,QAAiB6K,EAAkBlM,SAASgD,EAAE2B,IAOrF,KANDjD,IACC,IAAIuH,EAAY9J,OAAO+J,eACnBD,EAAUuD,OAAOvD,EAAUuD,QAC/B/M,KAAKoB,MAAM4L,eAAezJ,EAAE2B,IACxB0G,IAAerI,EAAE2B,IAAIlF,KAAKkJ,SAAS,CAAC0C,WAAY,WAO5D,kBAAC,EAAD,CACEd,KAAMvH,EACNkD,QAASlD,EAAEkD,QACXiE,aAAc1K,KAAKoB,MAAMsJ,aACzBY,kBAAmBtL,KAAKoB,MAAMkK,kBAC9BD,UAAWqB,EAAgB,GAAKnJ,EAAE2B,KAAOyB,EAAG7B,QAAQK,aACpDoG,YAA+B,IAAlBmB,GAAuBnJ,EAAE2B,KAAOyB,EAAG7B,QAAQK,gBAEvDuH,GAAiB,GAAOd,IAAerI,EAAE2B,KAAQ,kBAAC,EAAD,CAAmB4F,KAAMvH,EAAGwH,YAAaa,IAAerI,EAAE2B,GAAIwF,aAAc1K,KAAKoB,MAAMsJ,mBAIvI,yBAAKnI,UAAU,WAAW2B,EAAK5F,gBAIhCmN,Q,4GC/IA,SAASwB,EAAc7L,GAClC,OACI,oCACI,uBAAG8L,KAAK,gFACRnE,OAAO,UACH,yBAAKoE,IAAKC,MACV,6BAHJ,WAKA,uBAAGF,KAAK,gFACRnE,OAAO,UACH,yBAAKoE,IAAK3O,MACV,6BAHJ,SAKA,uBAAG0O,KAAK,iEACRnE,OAAO,UACH,yBAAKoE,IAAKE,MACV,6BAHJ,WAKA,uBAAGH,KAAK,4FACRnE,OAAO,UACH,yBAAKoE,IAAKG,MACV,6BAHJ,QAKA,uBAAGJ,KAAK,2CACRnE,OAAO,UACH,yBAAKoE,IAAKI,MACV,6BAHJ,UAKA,uBAAGL,KAAK,kEACR/B,MAAO,CAACqC,QAAS,KACjBzE,OAAO,UACH,yBAAKoE,IAAKM,MACV,6BAJJ,UChCG,SAASC,EAAMtM,GAC1B,OACI,oCACKA,EAAMuM,OAAS,6BAChB,kBAAC,EAAD,CAAepL,UAAWnB,EAAMwM,UAAWxL,QAAShB,EAAMyM,aAA1D,mBACA,8BACEzM,EAAMuM,OACR,yBAAKG,MAAM,eACP,uDACA,6BACA,kBAACb,EAAD,QAGF7L,EAAM2M,UACR,oCACA,kEACA,6BACA,yBAAKxL,UAAU,QACX,2BACA,oCADA,wDAEEnB,EAAMuM,OAAS,mEAEjB,6aAMJ,8BAGA,qDACA,6BACA,yBAAKpL,UAAU,QACX,6MAGA,2BACI,4BACI,oIACA,mHAGR,6IAGA,wNAGA,uIAGA,yfAGA,kYAGA,oSAGA,sKAEA,4BACI,2DACwB,6BADxB,6MAIJ,wDACyB,6BADzB,2iBAIA,sDACuB,6BADvB,gNAIA,6GAC8E,6BAD9E,shBAIA,yCACU,6BADV,gHAMA,sTAGA,sDACwB,uBAAG2K,KAAK,4CAAR,+CC1FzB,SAASQ,EAAMtM,GAC1B,OACI,oCACKA,EAAMuM,OAAS,6BAChB,kBAAC,EAAD,CAAepL,UAAWnB,EAAMwM,UAAWxL,QAAShB,EAAMyM,aAA1D,kFACA,8BACEzM,EAAMuM,OACR,yBAAKG,MAAM,eACP,gIACA,6BACA,kBAACb,EAAD,QAGF7L,EAAM2M,UACR,oCACA,gKACA,6BACA,yBAAKxL,UAAU,QACX,iTACkD,oCADlD,KAEEnB,EAAMuM,OAAS,wLAEjB,kiEAMJ,8BAGA,gKACA,6BACA,yBAAKpL,UAAU,QACX,25BAGA,2BACI,4BACI,srBACA,gsBAGR,qlBAGA,ovBAGA,0hCAGA,+lFAGA,2iDAGA,+lDAGA,w2BAEA,4BACI,+JACuB,6BADvB,6nCAIA,iJACwB,6BADxB,w/FAIA,+JACuB,6BADvB,q9CAIA,ylBACyG,6BADzG,6nFAIA,gFACS,6BADT,mhBAMJ,8yCAGA,mGACc,uBAAG2K,KAAK,4CAAR,+CC1Ff,SAASQ,GAAMtM,GAC1B,OACI,oCACKA,EAAMuM,OAAS,6BAChB,kBAAC,EAAD,CAAepL,UAAWnB,EAAMwM,UAAWxL,QAAShB,EAAMyM,aAA1D,6BACA,8BACEzM,EAAMuM,OACJ,yBAAKG,MAAM,eACP,oEACA,6BACA,kBAACb,EAAD,QAGN7L,EAAM2M,UACJ,oCACI,uFACA,6BACA,yBAAKxL,UAAU,QACX,4CACkB,sCADlB,gIAENnB,EAAMuM,OAAS,0FAET,+rBAMJ,8BAGR,gEACA,6BACA,yBAAKpL,UAAU,QACX,iUAGA,2BACI,4BACI,+JACA,qIAGR,2PAGA,wZAGA,8NAGA,qtBAGA,0iBAGA,2ZAGA,2TAEA,4BACQ,+DACkB,6BADlB,+TAIA,4DACqB,6BADrB,qtBAIA,kEACwB,6BADxB,oSAIA,+HACiF,6BADjF,2pBAIR,0CACW,6BADX,0MAMA,+cAGA,6DACmC,uBAAG2K,KAAK,4CAAR,iDCjFnD,MAAMc,WAAY9M,YAChBC,YAAYC,GACVC,MAAMD,GAENpB,KAAKiO,cAAgBjO,KAAKiO,cAAc1M,KAAKvB,MAC7CA,KAAKkO,UAAYlO,KAAKkO,UAAU3M,KAAKvB,MACrCA,KAAKiJ,cAAgBjJ,KAAKiJ,cAAc1H,KAAKvB,MAC7CA,KAAKgN,eAAiBhN,KAAKgN,eAAezL,KAAKvB,MAC/CA,KAAKsL,kBAAoBtL,KAAKsL,kBAAkB/J,KAAKvB,MACrDA,KAAK6N,YAAc7N,KAAK6N,YAAYtM,KAAKvB,MACzCA,KAAKmO,MAAQnO,KAAKmO,MAAM5M,KAAKvB,MAC7BA,KAAKoO,IAAM,MACXpO,KAAKqO,QAAU,UACfrO,KAAKsO,MAAQ,QAEbtO,KAAKuO,UAAY,IAAI9O,gBAAgBC,OAAOC,SAASC,OAASF,OAAOC,SAASC,OAAS,IAEvFI,KAAKwO,iBAAmB,WACxBxO,KAAKyO,WAAa,QAClBzO,KAAK0O,kBAAoB,WACzB1O,KAAK2O,OAAS,IACd3O,KAAK4O,WAAa,QAElB,IAAInC,EAAoBzM,KAAK6O,0BACzBC,EAAgB9O,KAAKuO,UAAU1O,IAAIG,KAAK4O,YAAc5O,KAAKuO,UAAU1O,IAAIG,KAAK4O,YAAYzO,oBAAsB,KAChHqM,EAAoB7F,EAAGpC,aAAaI,eAAe3B,IAAIC,GAAKA,EAAElC,KAC9DgO,EAAI/O,KAAKuO,UAAU1O,IAAIG,KAAK2O,QAAU3O,KAAKuO,UAAU1O,IAAIG,KAAK2O,QAAQxO,oBAAsB,KAzB/E,MA2B2BH,KAAKgP,iBAAiBF,EAAetC,EAAmBC,GAAjGD,EA3Bc,EA2BdA,kBAAmBC,EA3BL,EA2BKA,kBAEtBzM,KAAKsI,MAAQ,CACXoC,aAAc/D,EAAGpC,aAAaC,WAAW,GAAGzD,IAC5C0L,kBAAmBA,EACnBqC,cAAeA,EACftC,kBAAmBA,EACnBvH,OAAQ8J,EACRE,UAAWjP,KAAKuO,UAAUpL,IAAInD,KAAKyO,YACnCS,aAAclP,KAAKuO,UAAUpL,IAAInD,KAAK0O,oBAGxC1O,KAAKzC,MAAQyC,KAAKuO,UAAU1O,IAAI,OAASsP,mBAAmBnP,KAAKuO,UAAU1O,IAAI,QAAU,KAEzFG,KAAKoP,cAAgB,EAGvBJ,iBAAiBF,EAAetC,EAAmBC,GACjD,GAAIqC,EAAe,CACbA,IAAkB9O,KAAKoO,IAAK5B,EAAoB,CAAC7F,EAAGpC,aAAa9F,SAC5DqQ,IAAkB9O,KAAKqO,QAAS7B,EAAoB,CAAC7F,EAAGpC,aAAahG,SACrEuQ,IAAkB9O,KAAKsO,QAAO9B,EAAoB,CAAC7F,EAAGpC,aAAa/F,QAC5E,IAAIS,EAAae,KAAKuO,UAAU1O,IAAI,MACpC,GAAIZ,EAAY,CACd,IAAI+F,EAAK,KACT,IACEA,EAAK0C,KAAKK,MAAM9I,GACZ+F,IACFA,EAAGa,SAAW2G,EAAkB,GAChC7F,EAAG7B,QAAQC,oBAAoBC,IAEjCyH,EAAoB,CAAC9F,EAAG7B,QAAQK,cAElC,YAGJ,MAAO,CAAEqH,oBAAmBC,qBAG9BoC,0BACE,IAAIrP,EAAQQ,KAAKuO,UAAU1O,IAAIG,KAAKwO,kBAChCa,EAAM,GAEV,GAAI7P,EAAO,CACT,IAAI8P,EAAQ9P,EAAM8P,MAAM,KAExB,IAAK,IAAI/L,EAAI,EAAGA,EAAI+L,EAAM1N,OAAQ2B,IAAI,CACpC,IAAI2B,EAAKqK,SAASD,EAAM/L,IACpBiM,OAAOC,UAAUvK,IAAOyB,EAAG7B,QAAQwB,SAASpB,KAAQmK,EAAI9O,SAAS2E,IACnEmK,EAAIvM,KAAKoC,IAKf,OAAOmK,EAGTK,sBAAsBL,GACpB,GAAIA,EAAIzN,OAAS,EAAE,CACjB,IAAIpC,EAAQ,GAEZ,IAAK,IAAI+D,EAAI,EAAGA,EAAI8L,EAAIzN,OAAQ2B,IAC9B/D,GAAS6P,EAAI9L,GACTA,IAAM8L,EAAIzN,OAAO,IAAGpC,GAAO,KAGjCQ,KAAKuO,UAAUzK,IAAI9D,KAAKwO,iBAAkBhP,QAG1CQ,KAAKuO,UAAUoB,OAAO3P,KAAKwO,kBAE7B9O,OAAOkQ,QAAQC,aAAa,GAAG,KAAK,IAAI7P,KAAKuO,UAAUuB,YAGzD5B,UAAUnN,GACRf,KAAKkJ,SAAS,CAACwB,aAAc3J,EAAKgP,WAAW,IAG/C5B,MAAM6B,GACJ,IAAIC,EAAItJ,EAAGpC,aAAaC,WACpBjB,EAAI,EAER,KAAQA,EAAI0M,EAAErO,QACRqO,EAAE1M,GAAGxC,MAAQf,KAAKsI,MAAMoC,aADRnH,KAIlByM,EAAMzM,IAAUA,IAEhBA,EAAI,EAAGA,EAAI0M,EAAErO,OAAO,EACf2B,GAAK0M,EAAErO,SAAQ2B,EAAI,GAE5BvD,KAAKkJ,SAAS,CAACwB,aAAcuF,EAAE1M,GAAGxC,IAAKgP,WAAW,IAGpD9B,cAAclN,GACZf,KAAKkJ,SAAS,CAACsD,kBAAmBzL,IAGpCkI,cAAc7F,GACZpD,KAAKkJ,SAAS,CAACjE,OAAQ7B,IAGzB4J,eAAekD,EAAUC,GACvB,IAAI1D,EAAoBzM,KAAKsI,MAAMmE,kBACnCA,EAAkB3J,KAAKoN,GACnBC,GACFnQ,KAAKkJ,SAAS,CAACjE,OAAQ,KAEzBjF,KAAKoQ,eAAe3D,GAGtB2D,eAAe3D,GACbzM,KAAKkJ,SAAS,CAAEuD,kBAAmBA,IACnCzM,KAAK0P,sBAAsBjD,GAG7BnB,kBAAkBpG,GAChB,IAAIuH,EAAoBzM,KAAKsI,MAAMmE,kBACnCA,EAAoBA,EAAkB7J,OAAOW,GAAKA,IAAM2B,GACxDlF,KAAKoQ,eAAe3D,GAGtBI,SAAStP,GACPuE,SAASvE,MAAQA,EAGnBsQ,cACE,IAAIoB,IAAcjP,KAAKsI,MAAM2G,WAAajP,KAAKsI,MAAM4G,cAErDlP,KAAKkJ,SAAS,CAAC+F,UAAWA,EAAWC,cAAc,IAE/CD,EAAWjP,KAAKuO,UAAUzK,IAAI9D,KAAKyO,WAAY,KAEjDzO,KAAKuO,UAAUoB,OAAO3P,KAAKyO,YAC3BzO,KAAKuO,UAAUoB,OAAO3P,KAAK0O,oBAG7BhP,OAAOkQ,QAAQC,aAAa,GAAG,KAAK,IAAI7P,KAAKuO,UAAUuB,YAGzDxN,SACE,IAAI+N,EAAMrQ,KAAK6M,SAEX7M,KAAKzC,OACP8S,EAAIrQ,KAAKzC,OACTyC,KAAKzC,MAAQ,KACb8S,EAAM,MAGFrQ,KAAKsI,MAAM2G,UAAWjP,KAAK6M,SAAS3I,EAAK7G,YACpC2C,KAAKsI,MAAM4G,aAAclP,KAAK6M,SAAS3I,EAAK5G,eAChD0C,KAAK6M,SAAS3I,EAAK3G,OAG1ByC,KAAKoP,gBAEL,IAAIkB,EAAgB,aAIpB,OAHItQ,KAAKsI,MAAMwG,gBAAewB,GAAgB,UAC1CtQ,KAAKoP,cAAgB,IAAIkB,GAAgB,uBAG1CtQ,KAAKsI,MAAM2G,WAAcjP,KAAKsI,MAAM4G,aA2BnChL,EAAKhE,SAAWgE,EAAK1D,SACnB,kBAAC,EAAD,CAASqN,YAAa7N,KAAK6N,YAAaD,UAAW0C,EAAe3C,MAAmC,MAA5B3N,KAAKsI,MAAMwG,cAAuBf,SAAU/N,KAAKsI,MAAM4G,eAC/HhL,EAAKhE,SAAWgE,EAAKxD,SACpB,kBAAC,GAAD,CAASmN,YAAa7N,KAAK6N,YAAaD,UAAW0C,EAAe3C,MAAmC,MAA5B3N,KAAKsI,MAAMwG,cAAuBf,SAAU/N,KAAKsI,MAAM4G,eAChI,kBAACxB,EAAD,CAASG,YAAa7N,KAAK6N,YAAaD,UAAW0C,EAAe3C,MAAmC,MAA5B3N,KAAKsI,MAAMwG,cAAuBf,SAAU/N,KAAKsI,MAAM4G,eA9BtI,kBAAC,IAAD,CAAkBhK,GAAG,QAAQqL,aAAc,IAAMvQ,KAAKmO,OAAM,GAAOqC,cAAe,IAAMxQ,KAAKmO,OAAM,GAAQsC,UAAW,IACpH,oCACE,yBAAKlO,UAAWvC,KAAKsI,MAAMwG,gBAAkB9O,KAAKoO,IAAM,MAAQ,OAC5DpO,KAAKsI,MAAMwG,eAAiB,4BAAK5K,EAAK3G,MAAV,OAC5ByC,KAAKsI,MAAMwG,eAAiB,4BAAK5K,EAAK1G,UACxC,kBAAC,EAAD,CAAe+E,UAAW+N,EAAelO,QAASpC,KAAK6N,aAAvD,OAEA,kBAAC,EAAD,CAAcrK,UAAWxD,KAAKiO,cAAetL,YAAa3C,KAAKsI,MAAMkE,kBACnEzJ,MAAO4D,EAAGpC,aAAaI,eAAgBjC,WAAW,IACpD,kBAAC,EAAD,CAAcc,UAAWxD,KAAKkO,UAAWvL,YAAa3C,KAAKsI,MAAMoC,aAC/D3H,MAAO4D,EAAGpC,aAAaC,aACzB,kBAAC,EAAD,CAAQyE,cAAejJ,KAAKiJ,cAAeH,aAAc9I,KAAKgN,eAAgBxE,MAAOxI,KAAKsI,MAAMrD,SAChG,6BACA,kBAAC,EAAD,CACEyF,aAAc1K,KAAKsI,MAAMoC,aACzB8B,kBAAmBxM,KAAKsI,MAAMkE,kBAC9BC,kBAAmBzM,KAAKsI,MAAMmE,kBAC9BnB,kBAAmBtL,KAAKsL,kBACxB0B,eAAgBhN,KAAKgN,eACrB/H,OAAQjF,KAAKsI,MAAMrD,OACnB4H,SAAUwD,KAGb,iBAAkB3Q,QAAUM,KAAKsI,MAAMyH,WAAa,kBAAC,EAAD,KAAO7L,EAAKnF,cAW5DiP,UCjOf,IAAI0C,GAAa,MAkBjB,WACE,MAAMnC,EAAY,IAAI9O,gBAAgBC,OAAOC,SAASC,QACtD8Q,GAAanC,EAAU1O,IAAI,SAlB7B8Q,GAGA,WACEzM,EAAK0C,OACL9E,SAASvE,MAAQ2G,EAAK9G,UACH,UAAfsT,KAAwB5O,SAAS8O,KAAKrO,UAAU,QAKpDoE,EAAGC,OAAOM,KAAK,KACb2J,IAASvO,OAAO,kBAAC,GAAD,MAASR,SAASgP,eAAe,WAXrDC,K","file":"static/js/main.9c097656.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/windows.15e72531.svg\";","module.exports = __webpack_public_path__ + \"static/media/macos.3a236d88.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-play.7041ae46.svg\";","module.exports = __webpack_public_path__ + \"static/media/apk.a00fa3a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.990c2b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/linux.51ffa359.svg\";","const translations = \r\n{\r\n}\r\n\r\nexport default translations;","const translations = \r\n{\r\n}\r\n\r\nexport default translations;","import en from './en';\r\nimport ru from './ru';\r\nimport fr from './fr';\r\n\r\nconst langParam = \"lang\";\r\n\r\n//Default texts\r\nconst translations = en;\r\n\r\n//Must be executed before accesing the translations. Updates default texts with locale specific translations. If there's no translation, default text will be used\r\ntranslations.init = function() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const param = urlParams.get(langParam);\r\n\r\n    let lang = this.enLocale;\r\n    this.locale = lang;\r\n\r\n    if (param) {\r\n        lang = param.toLocaleLowerCase();\r\n    }\r\n    else{\r\n        lang = navigator.language.toLowerCase();\r\n    }\r\n\r\n    let localeObj;\r\n\r\n    if (lang.includes(this.ruLocale)) {\r\n        localeObj = ru;\r\n        this.locale = this.ruLocale;\r\n    }\r\n    else if (lang.includes(this.frLocale)) {\r\n        localeObj = fr;\r\n        this.locale = this.frLocale;\r\n    }\r\n\r\n    if (localeObj)\r\n        Object.keys(translations).forEach((key) => {\r\n            if (localeObj[key])\r\n                translations[key] = localeObj[key];\r\n        });\r\n};\r\n\r\ntranslations.enLocale = \"en\";\r\ntranslations.ruLocale = \"ru\";\r\ntranslations.frLocale = \"fr\";\r\n\r\nexport default translations;","const translations = \r\n{\r\n    pageTitle: \"xOPS CPU Benchmark: Performance Database\",\r\n    aboutTitle:  \"xOPS CPU Benchmark: About App\",\r\n    downloadTitle:  \"xOPS CPU Benchmark: Download\",\r\n    title: \"xOPS CPU Benchmark\",\r\n    subTitle: \"Performance Chart\",\r\n    ST_FLT: \"[F]loating single-threaded\",\r\n    MT_FLT: \"[F]loating multi-threaded\",\r\n    ST_INT: \"[I]nteger single-threaded\",\r\n    MT_INT: \"[I]nteger multi-threaded\",\r\n\r\n    ST_FLT_s: \"[F]lt. ST\",\r\n    MT_FLT_s: \"[F]lt. MT\",\r\n    ST_INT_s: \"[I]nt. ST\",\r\n    MT_INT_s: \"[I]nt. MT\",\r\n\r\n    ST_FLT_f: \"Floating single-threaded\",\r\n    MT_FLT_f: \"Floating multi-threaded\",\r\n    ST_INT_f: \"Integer single-threaded\",\r\n    MT_INT_f: \"Integer multi-threaded\",\r\n\r\n    performance: \"Performance\",\r\n    nothingToShow: \"Nothing to show\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    Windows: \"[W]indows\",\r\n    all: \"All\",\r\n    gflops: \"GFLOPS\",\r\n    ginops: \"GINOPS\",\r\n\r\n    hitEnter: \"Hit Enter & fix top result\",\r\n    hintDoubleTap: \"Double tap to fix record at the top\",\r\n    hintSwipe: \"Swipe left or right to change test\",\r\n    close: \"[C]lose\",\r\n    yourDevice: \"Your device\",\r\n\r\n    result_FSM: \"Flt.S÷M\",\r\n    result_ISM: \"Int.S÷M\",\r\n\r\n    result_FS: \"Flt.S\",\r\n    result_FM: \"Flt.M\",\r\n    result_IS: \"Flt.S\",\r\n    result_IM: \"Flt.M\"\r\n}\r\n\r\nexport default translations;","import React, { Component } from 'react';\r\n\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nclass PressableLink extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n    this.initShortcut = this.initShortcut.bind(this);\r\n\r\n    this.shortcut = null;\r\n    if (this.props.children){\r\n      let match = this.props.children.match(shortcutRegex);\r\n      if (match && match.length === 1)\r\n        this.shortcut = match[0].toLowerCase();\r\n    }\r\n  }\r\n\r\n  initShortcut() {\r\n    if (this.shortcut && !this.keyPressSubscribed) {\r\n      document.addEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  onKeyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcut === e.key && this.props.onClick)\r\n      {\r\n        this.props.onClick();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n  }\r\n\r\n  render() {\r\n    this.initShortcut();\r\n    return <a className={this.props.className} onClick={this.props.onClick}>{this.props.children}</a>\r\n  }\r\n\r\n}\r\n\r\nexport default PressableLink;","import React, { Component } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass ListSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.selectAll = this.selectAll.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }\r\n\r\n  toggle(key) {\r\n    if (this.props.selectedKey.includes(key)) { // remove key\r\n      if (this.props.selectedKey.length > 1) {\r\n        return this.props.selectedKey.filter(k => k !== key);\r\n      }\r\n      else {\r\n        return this.props.selectedKey;\r\n      }\r\n    }\r\n\r\n    this.props.selectedKey.push(key);\r\n\r\n    return this.props.selectedKey;\r\n  }\r\n\r\n  selectAll() {\r\n    return this.props.items.map(p => p.key);\r\n  }\r\n\r\n  onKeyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcuts.has(e.key))\r\n      {\r\n        let val = this.shortcuts.get(e.key);\r\n\r\n        //TODO - add suport for repeting shortcuts in multiselect list\r\n        if (Array.isArray(val)){ // single select, repeat shortcuts\r\n          let key = val[0].key;\r\n          \r\n          for (let i = 0; i < val.length; i++){\r\n            if (val[i].key === this.props.selectedKey){\r\n              if (i+1 < val.length) key = val[i+1].key;\r\n            }\r\n          }\r\n\r\n          this.props.itemClick(key);\r\n        }\r\n        else if (Array.isArray(this.props.selectedKey)){ // multi select select, non-repeat shortcuts        \r\n          this.props.itemClick(this.toggle(val.key));\r\n        } else if (val.key !== this.props.selectedKey) { // single select, non-repeat shortcuts\r\n          this.props.itemClick(val.key);\r\n        } \r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n  }\r\n\r\n  initShortcuts() {\r\n    this.prevItems = this.props.items;\r\n    this.shortcuts = new Map();\r\n    for (var i in this.prevItems) {\r\n      if (this.prevItems[i].shortcut) {\r\n        if (!this.shortcuts.has(this.prevItems[i].shortcut))\r\n          this.shortcuts.set(this.prevItems[i].shortcut, this.prevItems[i]);\r\n        else {\r\n          let sc = this.shortcuts.get(this.prevItems[i].shortcut);\r\n\r\n          if (Array.isArray(sc)) sc.push(this.prevItems[i]);\r\n          else {\r\n            let arr = [sc, this.prevItems[i]];\r\n            this.shortcuts.set(this.prevItems[i].shortcut, arr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.shortcuts.size > 0) {\r\n      document.addEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  updateShortcuts() {\r\n    if (!this.prevItems) {\r\n      this.initShortcuts();\r\n    }\r\n    else if (this.prevItems !== this.props.items) {\r\n      this.initShortcuts();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.updateShortcuts();\r\n\r\n    if (this.props.items)\r\n      return (\r\n        <ul className={this.props.className}>\r\n          {\r\n              this.props.items.map( // multiselect\r\n                i =>\r\n                  <li\r\n                    key={i.key}\r\n                    className={this.props.selectedKey.includes(i.key) ? \"selected\" : null}\r\n                    onClick={\r\n                      Array.isArray(this.props.selectedKey) ? \r\n                      () => this.props.itemClick(this.toggle(i.key)) : // multiselect\r\n                      () => this.props.itemClick(i.key) //single select\r\n                    }\r\n                  >\r\n                    {i.name}\r\n                  </li>\r\n              )\r\n          }\r\n\r\n          {\r\n            this.props.selectAll && <li onClick={() => this.props.itemClick(this.selectAll())}>{l18n.all}</li>\r\n          }\r\n        </ul>\r\n      )\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ListSelector;","import l18n from '../translations';\r\n\r\nlet platforms, tests;\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nfunction addShortcut(obj) {\r\n  let match = obj.name.match(shortcutRegex);\r\n  if (match && match.length === 1)\r\n    obj.shortcut = match[0].toLowerCase();\r\n}\r\n\r\nfunction getEntities(items) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i] ? l18n[i] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nfunction getEntitiesWithL18nMod(items, mod) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i+mod] ? l18n[i+mod] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nconst dictionaries = \r\n{\r\n  getTests : function(){\r\n    if (!tests) tests = getEntitiesWithL18nMod(this.data.tests,\"_s\");\r\n    return tests;\r\n  },  \r\n\r\n  getPlatforms : function(){\r\n      if (!platforms){\r\n        platforms = getEntities(this.data.platforms);\r\n\r\n        let keys = platforms.map(p => p.key);\r\n\r\n        if (keys.length !== 4) console.log(\"Invalid number of platforms in DB, 3 supported, found \"+keys.length);\r\n        if (!keys.includes(this.Windows)) console.log(\"Windows platfrom not found in DB\");\r\n        if (!keys.includes(this.Android)) console.log(\"Android platfrom not found in DB\");\r\n        if (!keys.includes(this.macOS)) console.log(\"macOS platfrom not found in DB\");\r\n      }\r\n      return platforms;\r\n  }\r\n}\r\n\r\ndictionaries.ST_FLT = \"ST_FLT\";\r\ndictionaries.MT_FLT = \"MT_FLT\";\r\ndictionaries.ST_INT = \"ST_INT\";\r\ndictionaries.MT_INT = \"MT_INT\";\r\n\r\ndictionaries.Windows = \"Windows\";\r\ndictionaries.Android = \"Android\";\r\ndictionaries.macOS = \"macOS\";\r\n\r\nexport default dictionaries;","import l18n from '../translations';\r\n\r\nconst results = \r\n{\r\n  addYourDeviceResult: function(yd){\r\n    // if (!yd.seqWrite && !yd.seqRead && !yd.randWrite && !yd.randRead && !yd.memCopy){\r\n    //   console.log(\"Invaid 'Your device' data\");\r\n    //   return;\r\n    // }\r\n\r\n    if (!yd.device) yd.device = l18n.yourDevice;\r\n\r\n    yd.id = this.yourDeviceId;\r\n    yd.deviceDetail = \"\";\r\n\r\n    if (this.data.results[this.data.results.length-1].id === yd.id) this.data.results.pop();\r\n    this.data.results.push(yd);\r\n  },\r\n\r\n  getResults: function(platfroms, test, device, excludeIds){\r\n    let filters = [];\r\n\r\n    filters.push(r => !r.hidden);\r\n    \r\n    if (platfroms && Array.isArray(platfroms)){\r\n      filters.push(r => platfroms.includes(r.platform));\r\n    }\r\n\r\n    if (device){\r\n      device = device.trim().toLowerCase();\r\n      if (device) {\r\n        if (device.length < 4)\r\n          filters.push(r => r.device.toLowerCase().includes(device));\r\n        else\r\n          filters.push(r => r.device.toLowerCase().includes(device) || r.deviceDetail.toLowerCase().includes(device));\r\n      }\r\n    }\r\n\r\n    if (excludeIds && excludeIds.length > 0){\r\n      filters.push(r => !excludeIds.includes(r.id));\r\n    }\r\n\r\n    let result = this.data.results.filter(r => \r\n      {\r\n        let condition = true;\r\n        for (let i = 0; i < filters.length; i++){\r\n          condition &= filters[i](r);\r\n          if (!condition) return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n    if (test){\r\n      result.sort(\r\n        (a,b) => \r\n          b[test] - a[test]\r\n        );\r\n    }\r\n\r\n    if (result.length > 0) this.lastResultId = result[0].id; else this.lastResultId = null;\r\n\r\n    return result;\r\n  },\r\n\r\n  getResultById: function(id){\r\n    if (id < 0 || id > this.data.results.length) return null;\r\n    if (id === 0 && this.data.results[this.data.results.length-1].id === 0) return this.data.results[this.data.results.length-1];\r\n\r\n    return this.data.results[id-1];\r\n  },\r\n\r\n  idExists: function(id){\r\n    return this.getResultById(id) != null;\r\n  },\r\n\r\n  setPercents: function(results, test) {\r\n    let maxVal = 0;\r\n    for (let i = 0; i < results.length; i++){\r\n      if (results[i][test] > maxVal) maxVal = results[i][test];\r\n    }\r\n    for (let i = 0; i < results.length; i++){\r\n      results[i].percent = results[i][test]/maxVal;\r\n    }\r\n  },\r\n\r\n  getLastResultId: function(){\r\n    if (this.lastResultId) return this.lastResultId;\r\n    return null;\r\n  }\r\n}\r\n\r\nresults.lastResultId = null;\r\nresults.yourDeviceId = 0;\r\n\r\nexport default results;","import dictionaries from './dictionaries';\r\nimport results from './results';\r\n\r\nconst db_version_url = \"https://raw.githubusercontent.com/maxim-saplin/xOPS-Web/master/Results_version.json\";\r\nlet db_url = \"https://raw.githubusercontent.com/maxim-saplin/xOPS-Web/master/Results.json\";\r\nconst db_version_sotrage_key = \"xops_db_version\";\r\nconst db_sotrage_key = \"xops_db\";\r\n\r\nconst db = {\r\n    dictionaries : dictionaries,\r\n    results : results,\r\n    \r\n    init: function (){\r\n        let fetchVersion = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_version_url, {cache: \"no-store\"})\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(result => {\r\n                    storage.setItem(db_version_sotrage_key, result.v);\r\n                    this.version = result.v;\r\n                    resolve(result.v);\r\n                });\r\n            });\r\n        };\r\n\r\n        let fetchDb = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_url, {cache: \"no-store\"})\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    storage.setItem(db_sotrage_key, JSON.stringify(result));\r\n                    dictionaries.data = result;\r\n                    results.data = result;\r\n                    resolve(result);\r\n                })\r\n            });\r\n        };\r\n\r\n        let promise = null;\r\n\r\n        let storage = window.localStorage;\r\n\r\n        let data = storage.getItem(db_sotrage_key);\r\n        if (data) {\r\n          try { data = JSON.parse(data);} catch{};\r\n          if (!data.results) data = null; // shallow check for corrupt data\r\n        }\r\n        let localDbVersion = storage.getItem(db_version_sotrage_key);\r\n\r\n        if (data){\r\n            promise = new Promise( resolve => {\r\n                fetchVersion()\r\n                .then(result => {\r\n\r\n                    if (result !== localDbVersion){\r\n                        fetchDb().then(result => resolve(result));                    \r\n                    }\r\n                    // local data is up to date\r\n                    else{ \r\n                        dictionaries.data = data;\r\n                        results.data = data;\r\n                        resolve(data)\r\n                    };\r\n                });\r\n            });\r\n        }\r\n        else{\r\n            fetchVersion();\r\n            promise = fetchDb();\r\n        }\r\n\r\n        return promise;\r\n    },\r\n\r\n    initFake: function() {\r\n      dictionaries.data = {\"results\":[{\"id\":1,\"device\":\"Xiaomi Mi 8 SE\",\"platform\":\"Android\",\"deviceDetail\":\"Snapdragon 710\",\"deviceComment\":\"\",\"deviceYear\":2018,\"ST_FLT\":1.6,\"MT_FLT\":8,\"ST_INT\":2.5,\"MT_INT\":11.7,\"hidden\":\"\"},{\"id\":2,\"device\":\"Apple 15\\\" MacBook Pro\",\"platform\":\"macOS\",\"deviceDetail\":\"Core i7 8850H\",\"deviceComment\":\"\",\"deviceYear\":2018,\"ST_FLT\":4.5,\"MT_FLT\":39.7,\"ST_INT\":8.2,\"MT_INT\":57.1,\"hidden\":\"\"},{\"id\":3,\"device\":\"Apple 15\\\" MacBook Pro\",\"platform\":\"Windows\",\"deviceDetail\":\"Core i7 8850H, Bootcamp\",\"deviceComment\":\"\",\"deviceYear\":2018,\"ST_FLT\":4.3,\"MT_FLT\":36.5,\"ST_INT\":8.3,\"MT_INT\":54.6,\"hidden\":\"\"},{\"id\":4,\"device\":\"Galaxy Note 10\",\"platform\":\"Android\",\"deviceDetail\":\"Snapdragon 855\",\"deviceComment\":\"\",\"deviceYear\":2019,\"ST_FLT\":3.6,\"MT_FLT\":21.5,\"ST_INT\":5,\"MT_INT\":21.5,\"hidden\":\"\"},{\"id\":5,\"device\":\"Lenovo ThinkPad 13 2nd Gen\",\"platform\":\"Windows\",\"deviceDetail\":\"Core i5-7200U\",\"deviceComment\":\"\",\"deviceYear\":2017,\"ST_FLT\":3.2,\"MT_FLT\":9.2,\"ST_INT\":6.1,\"MT_INT\":12.5,\"hidden\":\"\"}],\"platforms\":[\"Android\", \"macOS\", \"Windows\"],\"tests\":[\"ST_FLT\", \"MT_FLT\", \"ST_INT\", \"MT_INT\"]};\r\n      results.data = dictionaries.data;\r\n    }\r\n};\r\n\r\nexport default db;","import db from './db';\r\n\r\nexport default db;","import React, { PureComponent } from 'react';\r\nimport db from './data';\r\nimport l18n from './translations';\r\n\r\nclass Search extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textChanged = this.textChanged.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n    this.moveCursorToEnd = this.moveCursorToEnd.bind(this);\r\n\r\n    this.state = {\r\n      extraSpaces: props.value ? false : true, \r\n      blink: false,\r\n      showHitn: false\r\n    };\r\n\r\n    this.textInput = React.createRef();\r\n  }\r\n\r\n  textChanged(e){\r\n    if (this.enterPressed) {\r\n      e.target.innerText = \"\"; \r\n      this.enterPressed = false;\r\n    }\r\n    \r\n    if (this.props.searchChanged) {\r\n      this.props.searchChanged(e.target.innerText, true);\r\n    }\r\n    if (e.target.innerText && this.state.extraSpaces) this.setState({extraSpaces: false});\r\n    else if (!e.target.innerText && !this.state.extraSpaces) this.setState({extraSpaces: true});\r\n  }\r\n\r\n  onKeyPress(e){\r\n    if (e.key === \"Enter\" || e.charCode === 13) {\r\n      this.enterPressed = true;\r\n      let last = db.results.getLastResultId();\r\n      if (e.target.innerText && this.props.enterPressed && last) this.props.enterPressed(last);\r\n    }\r\n    else this.enterPressed = false;\r\n  }\r\n\r\n  moveCursorToEnd(el){\r\n    if(el.innerText && document.createRange)\r\n    {\r\n      window.setTimeout(() =>\r\n        {\r\n          let selection = document.getSelection();\r\n          let range = document.createRange();\r\n      \r\n          range.setStart(el.childNodes[0],el.innerText.length);\r\n          range.collapse(true);\r\n          selection.removeAllRanges();\r\n          selection.addRange(range);\r\n        }\r\n      ,1);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if (document.activeElement === this.textInput.current) \r\n      this.moveCursorToEnd(this.textInput.current);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>      \r\n        <span className=\"searchBox\">\r\n          <span \r\n            contentEditable=\"true\" \r\n            ref={this.textInput} \r\n            onInput={this.textChanged} \r\n            onKeyPress={this.onKeyPress}\r\n            onFocus={(e) => {this.setState({blink:true}); this.moveCursorToEnd(e.nativeEvent.target)}} \r\n            onBlur={() => {this.setState({blink:false})}}\r\n          >\r\n          {this.props.value}\r\n          </span>\r\n          <span \r\n            className={this.state.blink ? \"blink\" : \"\"} \r\n            onClick={() => {this.textInput.current.focus()}}\r\n          >\r\n            {!this.state.blink && this.state.extraSpaces && \"\\xA0\\xA0\\xA0\\xA0\"}_\r\n          </span>\r\n          &lt;/\r\n        </span>\r\n        <span className={!this.state.extraSpaces && this.state.blink ? \"searchBoxHint visible\" : \"searchBoxHint\"}>\r\n          {l18n.hitEnter}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { PureComponent } from 'react';\r\n\r\nclass TestResultDetailsItem extends PureComponent {\r\n  render() {\r\n    return(\r\n    <>\r\n      <span className={this.props.selectedTest === this.props.test? \"singleRes selected\" : \"singleRes\"}>\r\n      <span className=\"ttl\">{this.props.testName}</span>\r\n      <br/>\r\n      <span className=\"res\">{this.props.result}</span>\r\n      <br className=\"unitBreak\"/>\r\n      <span className=\"unit\">{this.props.unit}</span>\r\n      </span>\r\n    </>);\r\n  }\r\n}\r\n\r\nexport default TestResultDetailsItem;","import React, { PureComponent } from 'react';\r\nimport TestResultDetailsItem from './TestResultDetailsItem';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResultDetails extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <span className={this.props.noHighlight ? \"centerColumn noHighlight\" : \"centerColumn\"}>\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.ST_FLT}\r\n          testName={l18n.result_FS}\r\n          unit={l18n.gflops}\r\n          result={i[db.dictionaries.ST_FLT]}\r\n        />\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.MT_FLT}\r\n          testName={l18n.result_FM}\r\n          unit={l18n.gflops}\r\n          result={i[db.dictionaries.MT_FLT]}\r\n        />\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.ST_INT}\r\n          testName={l18n.result_IS}\r\n          unit={l18n.ginops}\r\n          result={i[db.dictionaries.ST_INT]}\r\n        />\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.MT_INT}\r\n          testName={l18n.result_IM}\r\n          unit={l18n.ginops}\r\n          result={i[db.dictionaries.MT_INT]}\r\n        />        \r\n\r\n      </span>);\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default TestResultDetails;","import React, { PureComponent } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass TestResult extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <>\r\n        <span className=\"leftColumn\">\r\n          <em itemProp=\"name\">\r\n            {i.device}\r\n          </em>\r\n          <br />\r\n          <span className=\"greyed\" itemProp=\"description\">\r\n            {i.deviceYear}{i.deviceDetail && \",\"} {i.deviceDetail}\r\n          </span>\r\n        </span>\r\n        <span className=\"rightColumn\">\r\n          <span style={{ width: i.percent * 80 + \"%\" }} itemProp=\"throughput\" > \r\n            {i[this.props.selectedTest]} {this.props.selectedTest.includes(\"FLT\") ? l18n.gflops : l18n.ginops}\r\n          </span>\r\n          {this.props.closableX && <button onClick={() => this.props.selectedIdRemoved(i.id)}>X</button>}\r\n          {this.props.closableEsc && <button onClick={() => this.props.selectedIdRemoved(i.id)}>[Esc]</button>}\r\n        </span>\r\n      </>);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default TestResult;","import React, { PureComponent } from 'react';\r\n\r\nclass Hint extends PureComponent {\r\n  render() {\r\n    return <span className=\"hint\">{this.props.children}</span>\r\n  }\r\n}\r\n\r\nexport default Hint;","import React, { Component } from 'react';\r\nimport TestResultDetails from './TestResultDetails';\r\nimport TestResult from './TestResult';\r\nimport Hint from './Hint';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.handleSingleDblClicks = this.handleSingleDblClicks.bind(this);\r\n    this.state = {expandedId: null, doubleTapHint: false};\r\n    this.clickTimeout = null;\r\n  }\r\n\r\n  getAllResults(result) {\r\n    let text = l18n.performance + \"\\x0A\";\r\n    let tests = db.dictionaries.getTests();\r\n\r\n    for (var i = 0; i < tests.length; i++) {\r\n      text += l18n[tests[i].key + \"_s\"] + \": \" + result[tests[i].key] + \" \";\r\n      text += tests[i].key.includes(\"FLT\") ? l18n.gflops : l18n.ginops;\r\n      if (i !== tests.length - 1) text += \"\\x0A\";\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed){\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n    }\r\n  }\r\n\r\n  handleSingleDblClicks(e, singleClick, dblClick){\r\n    e.preventDefault();\r\n    if (this.clickTimeout !== null) {\r\n      console.log(\"Dbl\");\r\n      clearTimeout(this.clickTimeout)\r\n      this.clickTimeout = null;\r\n      if (dblClick) dblClick();\r\n    } \r\n    else {\r\n      console.log(\"Sngl\");\r\n      if (singleClick) singleClick();\r\n      this.clickTimeout = setTimeout(\r\n        ()=>{\r\n              clearTimeout(this.clickTimeout)\r\n              this.clickTimeout = null\r\n            },\r\n        300);\r\n    }\r\n  }\r\n\r\n  onKeyUp(e){\r\n    if ((e.key === \"Escape\" || e.keyCode === 27) && this.deletableId) {\r\n      this.props.selectedIdRemoved(this.deletableId);\r\n    }\r\n  }\r\n\r\n  keyboardEventsSubscription() {\r\n    if (!this.deletableId && this.keyPressSubscribed) {\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n    else if (this.deletableId && !this.keyPressSubscribed) {\r\n      document.addEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let items = db.results.getResults(this.props.selectedPlatforms, this.props.selectedTest, this.props.device, this.props.selectedResultIds);\r\n    let selectedCount = -1;\r\n    this.deletableId = null;\r\n    let title = \"\";\r\n\r\n    let selectedResultIds = this.props.selectedResultIds;\r\n    let expandedId = this.state.expandedId;\r\n\r\n    if (selectedResultIds && selectedResultIds.length > 0){\r\n      let selectedResults = selectedResultIds.map(id => db.results.getResultById(id));\r\n      items = selectedResults.concat(items);\r\n      selectedCount = selectedResults.length;\r\n      this.deletableId = selectedResults[selectedCount-1].id;\r\n\r\n      for (let i = 0; (i < 2) && (i < selectedResults.length); i++){\r\n        title += selectedResults[i].device;\r\n        if (i === 1 || i === selectedResults.length-1) title +=\" - \"; else title +=\", \";\r\n      }\r\n    }\r\n\r\n    if (this.props.setTitle) this.props.setTitle(title + l18n.pageTitle);\r\n    \r\n    this.keyboardEventsSubscription();\r\n\r\n    if (items && items.length > 0) {\r\n      db.results.setPercents(items, this.props.selectedTest);\r\n      return (\r\n        <>\r\n        {this.state.doubleTapHint && <Hint>{l18n.hintDoubleTap}</Hint>}\r\n        {items.map(i =>\r\n          <div \r\n            itemScope\r\n            key={i.id} \r\n            className={selectedCount-- > 0 ? \"item selected\" : (expandedId === i.id) ? \"item highlight\" : \"item\"} \r\n            id={selectedCount === 0 ? \"last\" : null}\r\n            title={this.getAllResults(i)}\r\n            onClick={\r\n              (e) =>\r\n              {\r\n                this.handleSingleDblClicks(\r\n                  e,\r\n                  //single click\r\n                  (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n                  () => {\r\n                    this.setState({expandedId: expandedId === i.id ? null : i.id});\r\n                    if (!this.state.doubleTapHint) this.setState({doubleTapHint:true});\r\n                  }\r\n                  : null,\r\n                  //dbl click\r\n                  (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n                  (e) => {\r\n                    let selection = window.getSelection();\r\n                    if (selection.empty) selection.empty(); \r\n                    this.props.resultSelected(i.id); \r\n                    if (expandedId === i.id) this.setState({expandedId: null});\r\n                  }\r\n                  : null\r\n                );\r\n              }\r\n            }\r\n          >\r\n            <TestResult\r\n              item={i}\r\n              percent={i.percent} // hack to make PureComponent re-render, somehow for selected id's percent inside 'item' is'nt considered as changed, though the filed differs. For non selcted ids it works fine\r\n              selectedTest={this.props.selectedTest }\r\n              selectedIdRemoved={this.props.selectedIdRemoved}\r\n              closableX={selectedCount > 0 && i.id !== db.results.yourDeviceId}\r\n              closableEsc={selectedCount === 0 && i.id !== db.results.yourDeviceId}\r\n            />\r\n            {((selectedCount >= 0) || (expandedId === i.id)) && <TestResultDetails item={i} noHighlight={expandedId === i.id} selectedTest={this.props.selectedTest }/> }\r\n          </div>)}\r\n      </>)\r\n    }\r\n    else return <div className=\"nothing\">{l18n.nothingToShow}</div>\r\n  }\r\n}\r\n\r\nexport default TestResults;","import React from 'react';\nimport windows from './img/windows.svg';\nimport macOS from './img/macos.svg';\nimport google_play from './img/google-play.svg';\nimport apk from './img/apk.svg';\nimport github from './img/github.svg';\nimport linux from './img/linux.svg';\n\nexport default function DownloadLinks(props){\n    return (\n        <>\n            <a href=\"https://github.com/maxim-saplin/xOPS-App/releases/download/1.0.4/xOPS.exe.zip\" \n            target=\"_blank\">\n                <img src={windows}/>\n                <br/>Windows\n            </a>\n            <a href=\"https://github.com/maxim-saplin/xOPS-App/releases/download/1.0.4/xOPS.app.zip\" \n            target=\"_blank\">\n                <img src={macOS}/>\n                <br/>macOS\n            </a>\n            <a href=\"https://play.google.com/store/apps/details?id=xcom.saplin.xOPS\" \n            target=\"_blank\">\n                <img src={google_play}/>\n                <br/>Android\n            </a>\n            <a href=\"https://github.com/maxim-saplin/xOPS-App/releases/download/1.0.4/xcom.saplin.xOPS.apk.zip\" \n            target=\"_blank\">\n                <img src={apk}/>\n                <br/>.APK\n            </a>\n            <a href=\"https://github.com/maxim-saplin/xOPS-App\" \n            target=\"_blank\">\n                <img src={github}/>\n                <br/>GitHub\n            </a>\n            <a href=\"https://github.com/maxim-saplin/xOPS-Console/releases/tag/1.0.2\" \n            style={{opacity: 0.65}}\n            target=\"_blank\">\n                <img src={linux}/>\n                <br/>Linux\n            </a>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B]ack to Chart</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>Download CPDT Benchmark</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>How are the Chart Results Obtained</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                <em>xOPS</em> application is used to measure storage performance. \n                {!props.inApp && <> See download links above.</>}\n                </p>\n                <p>\n                At least 3 test runs are done and average values are presented. Default options are used (same for integer and float tests ) - 32 bit precision, number of threads\n                is determined as a double of the number of CPU cores (e.g. 8 threads with 4 cores) .\n                To avoid intereferences and side effects foreground/running apps are closed, network activity is checked to be inactive (e.g. no updates, downloads).\n                </p>\n            </div>\n            <br/>\n            </>}\n\n            <h1>How does the App Work</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                The app calculates how many operations (add, subtract, multiply, divide, etc.) a CPU can perform in a given second with either fractional (floating-point) or integer numbers:\n                </p>    \n                <p>\n                    <ol>\n                        <li>FLOPS - Floating-point Operations Per Second, performance measurement of Floating Point Unit (FPU). </li>\n                        <li>INOPS - Integer Operations Per Second, measurement of Arithmetic Logic Unit (ALU)</li>\n                    </ol>\n                </p>\n                <p>\n                E.g. 1 G(iga)FLOPS means that CPU can do 1 billion floating-point operations per second (such as 1.1+2.2=3.3).\n                </p>\n                <p>\n                General app logic is typically reliant on integer operations, while graphics and games rely on floating-point ones. The faster your CPU can crunch numbers, the faster your apps can run.\n                </p>\n                <p>\n                Tests are executed in single and multithreaded modes and reflect multi-core and single-core performance. \n                </p>\n                <p>\n                The tests are \"isolated\", meaning that they focus on creating CPU load only while ingoring other parts of the system (such as memory, cache, storage, network etc.). There're many factors determining systems' performance and CPU although the major one  is not the only. While the app doesn’t give a single simple answer/score to the questions \"How fast is the phone/laptop/PC?\", it gives a comparable performance metric of one important piece of your device - the CPU.\n                </p>\n                <p>\n                xOPS doesn't implement LINPACK benchmark (which is typically associated with majority of FLOPS mentions), the results can be a fair ballpark comparison to LINPACK (especially when comparing to supercomputers). E.g. on a laptop with Intel Core i7 8th Gen the original LINPACK program (compiled with GCC) gives 5.8 GFLOPS single threaded, xOPS - 4.5 GFLOPS. \n                </p>\n                <p>\n                At the same time, LINPACK implementing a sophisticated algorithm has much room for optimizations. Intel optimized LINPACK gives ~30 GFLOPS. This makes the results of the test very dependent on multiple factors (compiler optimizations, runtime environment etc.). \n                </p>\n                <p>\n                xOPS being cross-platform targets at ensuring consistency in results while running on many devices/OS's. To do so there're few features:\n                <ol>\n                    <li>\n                Triviality of the operations<br/>\n                The app implements plain loop, with no branches, externals calls, complex data structures etc. There're few consequent scalar operations (such as add and multiple) which are repeated millions of times.\n                </li>\n                <li>\n                Counting CIL instructions<br/>\n                Arm and x86 architectures are very different, same operation can be represented by different number of instructions. Different compilers can also produce different machine code (even for the same architecture). The app is based on .NET which is compiled to bytecode - CIL (Common Intermediate Language). This bytecode is latter translated to native code. As a reference point the number of operations in a single loop is counted as a number of CIL instructions. This abstracts away the question of dealing with various architectures and machine codes.\n                </li>\n                <li>\n                Disabling optimizations<br/> \n                Compiler is instructed to disable optimizations for the measurement loop. The body of the loop is written in the most explicit way. All of that is aimed at producing the most straightforward machine code.\n                </li>\n                <li>\n                Experimenting, finding the right mixture of operations, baselining the results<br/>\n                .NET platform assumes there's JIT (Just-in-Time) or AOT (ahead-of-time) compiler and runtime for the code. There're different versions of .NET (Mono for Mac and Android, .NET Framework for Windows) and different mixtures of JITs and runtimes can introduce a significant source of variation (machone code produced, instruction level parallelism, branch predictions etc.). To make sure the results are meaningful and consistent a solid effort has been put into tinkering with the code and trying it on multiple devices/environments.\n                </li>\n                <li>\n                Promptness<br/>\n                Еests take 5-20 seconds (depending on device performance) compared to minutes with other test suites.\n                </li>\n                </ol>\n                </p>\n                <p>\n                With the above measures taken the app when run on the same MacBook (in Windows Bootcamp, macOS and Android Emulator) shows the spread of results at 5%. xOPS results when compared against another popular cross-platform benchmark (at version 5 now) shows 95% correlation of scores.\n                </p>\n                <p>\n                The app is open source: <a href=\"https://github.com/maxim-saplin/xOPS-App\">https://github.com/maxim-saplin/xOPS-App</a>\n                </p>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B] Назад к списку</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>Скачать xOPS Бенчмарк</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>Как получены результаты</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                Для получения результатов используется приложение <em>xOPS</em>. \n                {!props.inApp && <> Ссылки для скачивания выше.</>}\n                </p>\n                <p>\n                Выполняется по крайней мере 3 теста, приводяться усредненные значения. Опции по умолчанию (для целочисленных и дробных вычислений):\n                точность 32 бита, количество потоков определяеться как двойное количество ядер процессора(8 ядер - 16 потоков). \n                Для избежания влияния на результаты закрываются активные приложения, проверяется, что сетевая активность минимальна (нету запущенных загрузок и обновлений).\n                </p>\n            </div>\n            <br/>\n            </>}\n            \n            <h1>Как работает приложение</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                Приложение измеряет сколько операций (сложение, вычитание, умножение, деление, сравнение и т.п.) может выполнить центральный процессор (ЦП) над дробными (floating-point) и целыми (integer) числами:\n                </p>    \n                <p>\n                    <ol>\n                        <li>FLOPS (Floating-point Operations Per Second) - количество операций с дробными числами в секунду, измерение производительности математического сопроцессора (Floating Point Unit, FPU).</li>\n                        <li>INOPS (Integer Operations Per Second) - количество операций с целыми числами в секунду, измерение производительности арифметико-логического устройства (Arithmetic logic unit, ALU).</li>\n                    </ol>\n                </p>\n                <p>\n                Например 1 G(iga)FLOPS означает, что процессор способен произвести 1 миллиард операций с дробными числами (такими как 1.1+2.2=3.3).\n                </p>\n                <p>\n                Основная логика приложений зачастую построена на целочисленных вычислениях. Графические задачи и игры полагаются на дробные вычисления.   \n                </p>\n                <p>\n                И АЛУ и математический сопроцессор тестируются как в однопоточном, так и многопоточном режиме, что отражает производительность как отдельного ядра, так и всех ядер, задействованных одновременно.\n                </p>\n                <p>\n                Тесты \"изолированные\", что означает что они нагружают исключительно центральный процессор игнорируя иные компоненты вычислительной системы (память, кэш, хранилище, сеть, оптимизации ПО). Существует множество факторов, определяющих производительность, хоть процессор один из важнейших, он не является единственным. Приложение не пытается дать простой ответ на сложный вопрос \"Насколько быстр мой телефон/ноутбук/компьютер?\". Однако оно дает оценку одного важного компонента вашего устройства - процессора.\n                </p>\n                <p>\n                xOPS не реализует бенчмарк LINPACK (который обычно подразумевается, когда упоминается FLOPS). Тем не менее результаты в первом приближении можно сравнивать с LINPACK (особенно при сравнении с суперкомпьютерами). Например на ноутбуке с Intel Core i7 8-го поколения оригинальная программа LINPACK (скомпилированная в GCC) дает 5,8 GFLOPS (один поток), xOPS - 4,5 GFLOPS.\n                </p>\n                <p>\n                В то же время LINPACK, реализующий сложный алгоритм, имеет широкое поле для оптимизации. Например пакет Intel LINPACK показывает порядка~ 30 GFLOPS на том же железе.  Т.о. результаты LINPACK представляют сложность с точки зрения сопоставимости: из-за сложностей с минимизацией таких факторов, как оптимизации компилятора, среды выполнения и т.д.\n                </p>\n                <p>\n                xOPS является кроссплатформенной программой и ставит целью обеспечение согласованности результатов при работе на многих устройствах и ОС. Это достигается за счет:\n                <ol>\n                    <li>\n                    Тривиальности операций.<br/>\n                    В приложении реализован простой цикл без ветвей, внешних вызовов, сложных структур данных и т.п. Существует несколько последовательных скалярных операций (таких как сложение, умножение), которые повторяются миллионы раз.\n                    </li>\n                    <li>\n                    Подсчета CIL инструкций.<br/>\n                    Архитектуры Arm и x86 очень разные, одна и та же операция может быть представлена ​​различным количеством инструкций. Разные компиляторы также могут проивзодить различный машинный код для идентичного исходного кода (даже для одной и той же архитектуры). xOPS основан на .NET и компилируется в промежуточный байт-код - CIL (Common Intermediate Language). Он в свою очередь в дальнейшем преобразуется в машинный код. За единицу измерения операции xOPS принимает одну CIL интсрукцию. Т.о. приложение измеряет количество CIL инструкций, которые способен выполнить процессор в единицу времени и абстрагируется от специфичный машинных инструкций.\n                    </li>\n                    <li>\n                    Отключения оптимизаций.<br/> \n                    Компиляторы сконфигурированы т.о., чтобы оптимизации не применялись к главному циклу. Также код внутри цикла написан максимально очевидным способом: одна строчка - одна операция над операндом. Это сделано для того, что байткод превращался в машинный код наиболее очевидным способом \"влоб\".\n                    </li>\n                    <li>\n                    Экспериментирования, поиска оптимального сочетания операций, сравнения результатов с дргуими бенчмарками.<br/>\n                    Платформа .NET предполагает наличие JIT (Just-in-Time) или AOT (Ahead-of-Time) компилятора и промежуточной среды выполнения (Runtime). Существуют разные версии .NET (Mono для Mac и Android, .NET Framework для Windows), различные версии JIT. Комбинации этих факторов представляют значительный источник вариации результатов (разный машинный код, параллелизм на уровне инструкций, предсказания ветвлений и т. д.). Чтобы убедиться, что результаты являются значимыми и сопоставимыми, при поиске оптимального микса и настроек кода постоянно происходило сравнение результатов на разных устройствах и ОС.\n                    </li>\n                    <li>\n                    Быстроты.<br/>\n                    Тесты выполняются за считанные секунды, в сравнении с минутами, которые требуются другим бенчмаркам.\n                    </li>\n                </ol>\n                </p>\n                <p>\n                С учетом вышеуказанных мер приложение, запущенное на том же MacBook (в Windows Bootcamp, macOS и Android Emulator), показывает разброс результатов в 5%. Также результаты xOPS на 95% коррелируют с показателями другого популярного кросс-платформенного бенчмарка (по результатам измерения 15 устройств).\n                </p>\n                <p>\n                Исходный код: <a href=\"https://github.com/maxim-saplin/xOPS-App\">https://github.com/maxim-saplin/xOPS-App</a>\n                </p>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props) {\n    return (\n        <>\n            {props.inApp && <br />}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[R]etour aux résultats</PressableLink>\n            <br />\n            {!props.inApp &&\n                <div class=\"downloadBox\">\n                    <h1>Télécharger xOPS CPU Benchmark</h1>\n                    <br />\n                    <DownloadLinks />\n                </div>}\n\n            {!props.download &&\n                <>\n                    <h1>Comment les résultats du graphique sont-ils obtenus?</h1>\n                    <br />\n                    <div className=\"text\">\n                        <p>\n                            L'application <em> xOPS </em> est utilisée pour mesurer les performances de stockage.\n                {!props.inApp && <>Voir les liens de téléchargement ci-dessus.</>}\n                        </p>\n                        <p>\n                            Au moins 3 essais sont effectués et des valeurs moyennes sont présentées. Les options par défaut sont utilisées (idem pour les tests de nombres entiers et flottants) - précision 32 bits, nombre de threads\n                            est déterminé comme le double du nombre de cœurs de processeur (par exemple, 8 threads avec 4 cœurs).\n                            Pour éviter les interférences et les effets secondaires, les applications de premier plan / en cours d'exécution sont fermées, l'activité du réseau est vérifiée pour être inactive (par exemple, aucune mise à jour, téléchargement)\n                </p>\n                    </div>\n                    <br />\n                </>}\n\n            <h1>Comment fonctionne l'application</h1>\n            <br />\n            <div className=\"text\">\n                <p>\n                    L'application calcule le nombre d'opérations (addition, soustraction, multiplication, division, etc.) qu'un processeur peut effectuer en une seconde donnée avec des nombres fractionnaires (virgule flottante) ou entiers:\n                </p>\n                <p>\n                    <ol>\n                        <li> FLOPS - Opérations à virgule flottante par seconde, mesure des performances de l'unité à virgule flottante (FPU). </li>\n                        <li> INOPS - Opérations entières par seconde, mesure de l'unité logique arithmétique (ALU) </li>\n                    </ol>\n                </p>\n                <p>\n                    Par exemple. 1 G (iga) FLOPS signifie que le processeur peut effectuer 1 milliard d'opérations en virgule flottante par seconde (comme 1,1 + 2,2 = 3,3).\n                </p>\n                <p>\n                    La logique générale des applications dépend généralement des opérations entières, tandis que les graphiques et les jeux reposent sur des opérations à virgule flottante. Plus votre processeur peut calculer des chiffres rapidement, plus vos applications peuvent s'exécuter rapidement.\n                </p>\n                <p>\n                    Les tests sont exécutés en modes simple et multithread et reflètent les performances multicœur et monocœur.\n                </p>\n                <p>\n                    Les tests sont \"isolés\", ce qui signifie qu'ils se concentrent sur la création de charge CPU uniquement lors de l'intégration d'autres parties du système (telles que la mémoire, le cache, le stockage, le réseau, etc.). De nombreux facteurs déterminent les performances des systèmes et le processeur, bien que le principal ne soit pas le seul. Bien que l'application ne donne pas une seule réponse / note simple aux questions \"Quelle est la vitesse du téléphone / ordinateur portable / PC?\", Elle donne une mesure de performance comparable d'une pièce importante de votre appareil - le CPU.\n                </p>\n                <p>\n                    xOPS n'implémente pas le benchmark LINPACK (qui est généralement associé à la majorité des mentions FLOPS), les résultats peuvent être une comparaison approximative à LINPACK (en particulier lors de la comparaison avec des superordinateurs). Par exemple. sur un ordinateur portable avec Intel Core i7 8e génération, le programme LINPACK original (compilé avec GCC) donne 5,8 GFLOPS à filetage unique, xOPS - 4,5 GFLOPS.\n                </p>\n                <p>\n                    Dans le même temps, LINPACK implémentant un algorithme sophistiqué a beaucoup de place pour les optimisations. LINPACK optimisé par Intel donne ~ 30 GFLOPS. Cela rend les résultats du test très dépendants de plusieurs facteurs (optimisations du compilateur, environnement d'exécution, etc.).\n                </p>\n                <p>\n                    xOPS étant des cibles multiplateformes pour assurer la cohérence des résultats lors de l'exécution sur de nombreux appareils / systèmes d'exploitation. Pour ce faire, il existe quelques fonctionnalités:\n                <ol>\n                        <li>\n                Trivialité des opérations <br />\n                L'application implémente une boucle simple, sans branches, appels externes, structures de données complexes, etc. Il y a peu d'opérations scalaires conséquentes (telles que add et multiple) qui sont répétées des millions de fois.\n                </li>\n                        <li>\n                Compter les instructions CIL <br />\n                Les architectures Arm et x86 sont très différentes, une même opération peut être représentée par un nombre d'instructions différent. Différents compilateurs peuvent également produire différents codes machine (même pour la même architecture). L'application est basée sur .NET qui est compilé en bytecode - CIL (Common Intermediate Language). Ce bytecode est ensuite traduit en code natif. Comme point de référence, le nombre d'opérations dans une seule boucle est compté comme un certain nombre d'instructions CIL. Ceci résume la question du traitement de diverses architectures et codes machine.\n                </li>\n                        <li>\n                Désactivation des optimisations <br />\n                Le compilateur est invité à désactiver les optimisations pour la boucle de mesure. Le corps de la boucle est écrit de la manière la plus explicite. Tout cela vise à produire le code machine le plus simple.\n                </li>\n                        <li>\n                        Expérimenter, trouver le bon mélange d'opérations, établir les résultats de base <br />\n                        La plate-forme .NET suppose qu'il existe un compilateur JIT (Just-in-Time) ou AOT (avance) pour le code. Il existe différentes versions de .NET (Mono pour Mac et Android, .NET Framework pour Windows) et différents mélanges de JIT et d'exécution peuvent introduire une source de variation importante (code machone produit, parallélisme au niveau de l'instruction, prédictions de branche, etc.). Pour s'assurer que les résultats sont significatifs et cohérents, un effort solide a été mis à bricoler le code et à l'essayer sur plusieurs appareils / environnements.\n                </li>\n                <li>\n                Promptitude<br />\n                Les tests prennent 5 à 20 secondes (selon les performances de l'appareil) par rapport aux minutes avec d'autres suites de tests.\n                </li>\n                </ol>\n                </p>\n                <p>\n                    Avec les mesures ci-dessus prises, l'application lorsqu'elle est exécutée sur le même MacBook (dans Windows Bootcamp, macOS et Android Emulator) affiche la répartition des résultats à 5%. Les résultats xOPS comparés à un autre benchmark multiplateforme populaire (à la version 5 maintenant) montrent une corrélation de 95% des scores.\n                </p>\n                <p>\n                    L'application est open source: <a href=\"https://github.com/maxim-saplin/xOPS-App\"> https://github.com/maxim-saplin/xOPS-App </a>\n                </p>\n            </div>\n        </>\n    )\n}","import React, { Component } from 'react'\nimport ReactSwipeEvents from 'react-swipe-events'\nimport l18n from './translations'\nimport PressableLink from './PressableLink'\nimport ListSelector from './ListSelector'\nimport Search from './Search'\nimport TestResults from './TestResults'\nimport Hint from './Hint'\nimport AboutEn from './AboutEn'\nimport AboutRu from './AboutRu'\nimport AboutFr from './AboutFr'\nimport db from './data'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.platformClick = this.platformClick.bind(this);\n    this.testClick = this.testClick.bind(this);\n    this.searchChanged = this.searchChanged.bind(this);\n    this.resultSelected = this.resultSelected.bind(this);\n    this.selectedIdRemoved = this.selectedIdRemoved.bind(this);\n    this.toggleAbout = this.toggleAbout.bind(this);\n    this.swipe = this.swipe.bind(this);\n    this.wpf = \"wpf\";\n    this.android = \"android\";\n    this.macos = \"macos\";\n\n    this.urlParams = new URLSearchParams(window.location.search ? window.location.search : \"\");\n    \n    this.selectedIdsParam = \"selected\";\n    this.aboutParam = \"about\";\n    this.showDownloadParam = \"download\";\n    this.qParam = \"q\";\n    this.inappParam = \"inapp\";\n\n    let selectedResultIds = this.getSelectedIdsFromParam()\n    let inAppPlatform = this.urlParams.get(this.inappParam) ? this.urlParams.get(this.inappParam).toLocaleLowerCase() : null;\n    let selectedPlatforms = db.dictionaries.getPlatforms().map(p => p.key);\n    let q = this.urlParams.get(this.qParam) ? this.urlParams.get(this.qParam).toLocaleLowerCase() : null;\n\n    ({ selectedPlatforms, selectedResultIds } = this.inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds));\n\n    this.state = {\n      selectedTest: db.dictionaries.getTests()[0].key,\n      selectedResultIds: selectedResultIds,\n      inAppPlatform: inAppPlatform,\n      selectedPlatforms: selectedPlatforms,\n      device: q,\n      showAbout: this.urlParams.has(this.aboutParam),\n      showDownload: this.urlParams.has(this.showDownloadParam)\n    };\n\n    this.title = this.urlParams.get(\"ttl\") ? decodeURIComponent(this.urlParams.get(\"ttl\")) : null;\n\n    this.renderCounter = 0;\n  }\n\n  inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds) {\n    if (inAppPlatform) {\n      if (inAppPlatform === this.wpf) selectedPlatforms = [db.dictionaries.Windows];\n      else if (inAppPlatform === this.android) selectedPlatforms = [db.dictionaries.Android];\n      else if (inAppPlatform === this.macos) selectedPlatforms = [db.dictionaries.macOS];\n      let yourDevice = this.urlParams.get(\"yd\");\n      if (yourDevice) {\n        let yd = null;\n        try {\n          yd = JSON.parse(yourDevice);\n          if (yd) {\n            yd.platform = selectedPlatforms[0];\n            db.results.addYourDeviceResult(yd);\n          }\n          selectedResultIds = [db.results.yourDeviceId];\n        }\n        catch { }\n      }\n    }\n    return { selectedPlatforms, selectedResultIds };\n  }\n\n  getSelectedIdsFromParam(){\n    let param = this.urlParams.get(this.selectedIdsParam);\n    let ids = [];\n\n    if (param) {\n      let split = param.split(\",\");\n      \n      for (let i = 0; i < split.length; i++){\n        let id = parseInt(split[i]);\n        if (Number.isInteger(id) && db.results.idExists(id) && !ids.includes(id)){\n          ids.push(id);\n        }\n      }\n    }\n\n    return ids;\n  }\n\n  addSelectedIdsToParam(ids){\n    if (ids.length > 0){ \n      let param = \"\";\n\n      for (let i = 0; i < ids.length; i++) {\n        param += ids[i];\n        if (i !== ids.length-1) param+=\",\";\n      }\n\n      this.urlParams.set(this.selectedIdsParam, param);\n    }\n    else {\n      this.urlParams.delete(this.selectedIdsParam);\n    }\n    window.history.replaceState({},null,\"?\"+this.urlParams.toString());\n  }\n\n  testClick(key){\n    this.setState({selectedTest: key, swipeHint: true});\n  }\n\n  swipe(left){\n    let t = db.dictionaries.getTests();\n    let i = 0;\n\n    for (i; i < t.length; i++){\n      if (t[i].key === this.state.selectedTest) break;\n    }\n\n    if (left) i++; else i--;\n\n    if (i < 0) i = t.length-1;\n    else if (i >= t.length) i = 0;\n    \n    this.setState({selectedTest: t[i].key, swipeHint: true});\n  }\n\n  platformClick(key){\n    this.setState({selectedPlatforms: key});\n  }\n\n  searchChanged(val){\n    this.setState({device: val});\n  }\n\n  resultSelected(resultId, clearDevice){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds.push(resultId);\n    if (clearDevice) {\n      this.setState({device: \"\"});\n    }\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setSelectedIds(selectedResultIds) {\n    this.setState({ selectedResultIds: selectedResultIds });\n    this.addSelectedIdsToParam(selectedResultIds);\n  }\n\n  selectedIdRemoved(id){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds = selectedResultIds.filter(i => i !== id);\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setTitle(title){\n    document.title = title;\n  }\n\n  toggleAbout(){\n    let showAbout = !(this.state.showAbout || this.state.showDownload);\n\n    this.setState({showAbout: showAbout, showDownload: false});\n\n    if (showAbout) this.urlParams.set(this.aboutParam, \"\");\n    else {\n      this.urlParams.delete(this.aboutParam);\n      this.urlParams.delete(this.showDownloadParam);\n    }\n\n    window.history.replaceState({},null,\"?\"+this.urlParams.toString());\n  }\n\n  render() {\n    let stl = this.setTitle;\n\n    if (this.title){ // TestResults can change title, upon first load override title with the value from parm\n      stl(this.title);\n      this.title = null;\n      stl = null;\n    }\n    else {\n      if (this.state.showAbout) this.setTitle(l18n.aboutTitle);\n      else if (this.state.showDownload) this.setTitle(l18n.downloadTitle);\n      else this.setTitle(l18n.title);\n    }\n\n    this.renderCounter++;\n\n    let helpLinkClass = \"leftCorner\";\n    if (this.state.inAppPlatform) helpLinkClass +=\" inapp\";\n    if (this.renderCounter < 2 ) helpLinkClass +=\" textColorVibration\";\n\n    return (\n      !this.state.showAbout && !this.state.showDownload ?\n      <ReactSwipeEvents id=\"swipe\" onSwipedLeft={() => this.swipe(true)} onSwipedRight={() => this.swipe(false)} threshold={75}>\n        <>\n          <div className={this.state.inAppPlatform !== this.wpf ? \"pad\" : null}>\n            {!this.state.inAppPlatform && <h1>{l18n.title}: </h1>}\n            {!this.state.inAppPlatform && <h2>{l18n.subTitle}</h2>}\n            <PressableLink className={helpLinkClass} onClick={this.toggleAbout}>[?]</PressableLink>\n            \n            <ListSelector itemClick={this.platformClick} selectedKey={this.state.selectedPlatforms} \n              items={db.dictionaries.getPlatforms()} selectAll={true} />\n            <ListSelector itemClick={this.testClick} selectedKey={this.state.selectedTest} \n              items={db.dictionaries.getTests()} />\n            <Search searchChanged={this.searchChanged} enterPressed={this.resultSelected} value={this.state.device}/>\n            <br/>\n            <TestResults \n              selectedTest={this.state.selectedTest}\n              selectedPlatforms={this.state.selectedPlatforms}\n              selectedResultIds={this.state.selectedResultIds}\n              selectedIdRemoved={this.selectedIdRemoved}\n              resultSelected={this.resultSelected}\n              device={this.state.device}\n              setTitle={stl}\n            />        \n          </div>\n          {'ontouchstart' in window && this.state.swipeHint && <Hint>{l18n.hintSwipe}</Hint>}\n        </>\n      </ReactSwipeEvents>\n      : l18n.locale === l18n.ruLocale \n        ? <AboutRu toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n        : (l18n.locale === l18n.frLocale \n          ? <AboutFr toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n          : <AboutEn toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/>));\n  }\n}\n\nexport default App;","import 'babel-polyfill';\nimport 'url-search-params-polyfill';\nimport 'whatwg-fetch'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index_dark.css';\nimport App from './App';\nimport l18n from './translations';\nimport db from './data';\n\n\nlet themeParam = null;\n\ninitParams(); \nstart();\n\nfunction start(){\n  l18n.init();\n  document.title = l18n.pageTitle;\n  if (themeParam !== \"white\") document.body.className=\"dark\";\n\n  // db.initFake();\n  // ReactDOM.render(<App />, document.getElementById('root'));\n\n  db.init().then(() => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n  });\n}\n\nfunction initParams(){\n  const urlParams = new URLSearchParams(window.location.search);\n  themeParam = urlParams.get(\"theme\");\n}"],"sourceRoot":""}